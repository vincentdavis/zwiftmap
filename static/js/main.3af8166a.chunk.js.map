{"version":3,"sources":["App.module.css","ElevationChart.module.css","constants.ts","data/routes.ts","SegmentRepository.ts","ElevationChart.tsx","worldConfig.ts","maps/crit-city.png","maps/france.png","maps/innsbruck.png","maps/london.png","maps/new-york.png","maps/paris.png","maps/richmond.png","maps/watopia.png","maps/yorkshire.png","RouteMap.tsx","RouteSelector.tsx","App.tsx","hooks/useHash.ts","index.tsx","RouteSelector.module.css"],"names":["module","exports","WORLDS","routes","segmentCache","getSegment","segmentSlug","a","fetchSegment","fetch","response","json","ElevationChart","route","onMouseHoverDistanceChange","segment","useAsync","slug","result","data","useMemo","undefined","uniqWith","distance","map","index","Math","round","elevation","altitude","b","className","styles","Container","ResponsiveContainer","width","height","AreaChart","margin","top","right","left","bottom","baseValue","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","name","dataKey","type","allowDecimals","tickCount","domain","unit","YAxis","Tooltip","content","props","TooltipContent","onMouseDistance","isAnimationActive","position","y","cursor","stroke","Area","fillOpacity","fill","useEffect","payload","length","label","style","padding","backgroundColor","border","whiteSpace","display","paddingTop","paddingBottom","color","separator","fontWeight","worldConfigs","imageBounds","routeBounds","image","france","innsbruck","london","paris","richmond","watopia","yorkshire","RouteMap","routeSelection","mouseHoverDistance","world","worldConfig","bounds","LatLngBounds","useState","setMap","zoomControl","setPosition","r","latlng","reduce","coord","extend","invalidateSize","fitBounds","setMaxBounds","minZoom","getBoundsZoom","setMinZoom","pointCoordinates","pointIndex","findIndex","d","MapContainer","whenCreated","ImageOverlay","url","attribution","Polyline","positions","pathOptions","weight","Circle","center","radius","fillColor","RouteSelector","selection","onChange","handleChange","e","target","checked","find","value","filteredRoutes","filter","sport","stravaSegmentId","sort","localeCompare","Sidebar","c","Item","selected","App","window","location","hash","setHash","listener","addEventListener","removeEventListener","slice","useHash","includes","setMouseHoverDistance","Wrapper","routeSelected","rs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,cAAgB,6B,i/lCCAjED,EAAOC,QAAU,CAAC,UAAY,oC,qJCCjBC,EAAkB,CAC7B,YACA,SACA,YACA,SACA,WACA,QACA,WACA,UACA,aCRWC,E,kJCDPC,EAA4D,GAE3D,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,SAAAC,EAAA,6DACAH,EAAaE,KAChBF,EAAaE,GAAeE,EAAaF,IAFtC,SAKQF,EAAaE,GALrB,oF,+BAQQE,E,8EAAf,WAA4BF,GAA5B,eAAAC,EAAA,sEACyBE,MAAM,YAAD,OAAaH,EAAb,UAD9B,cACQI,EADR,gBAEeA,EAASC,OAFxB,oF,iCCUO,SAASC,EAAT,GAAuE,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,2BACtBC,EAAYC,YAASX,EAAY,CAACQ,EAAMI,OAAhDC,OAEFC,EAA0BC,mBAAQ,WACtC,QAAgBC,IAAZN,EAIJ,OAAOO,IACLP,EAAQQ,SAASC,KAAI,SAACD,EAAUE,GAAX,MAAsB,CACzCF,SAAUG,KAAKC,MAAMJ,EAAW,IAAM,IACtCK,UAAWb,EAAQc,SAASJ,QAE9B,SAAClB,EAAGuB,GAAJ,OAAUvB,EAAEgB,WAAaO,EAAEP,cAE5B,CAACR,IAEJ,YAAaM,IAATF,EACK,KAIP,qBAAKY,UAAWC,IAAOC,UAAvB,SACE,cAACC,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,OAAzC,SACE,eAACC,EAAA,EAAD,CACElB,KAAMA,EACNmB,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GAGVC,UAAU,UATZ,UAWE,+BACE,iCAAgBC,GAAG,iBAAiBC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAA5D,UACE,sBAAMC,OAAO,KAAKC,UAAU,QAAQC,YAAa,KACjD,sBAAMF,OAAO,MAAMC,UAAU,QAAQC,YAAa,SAGtD,cAACC,EAAA,EAAD,CAAeC,UAAU,IACzB,cAACC,EAAA,EAAD,CACEC,KAAK,WACLC,QAAQ,WACRC,KAAK,SACLC,eAAe,EACfC,UAAW,GACXC,OAAQ,CAAC,EAAG,WACZC,KAAK,OAGP,cAACC,EAAA,EAAD,CACEP,KAAK,YACLE,KAAK,SACLC,eAAe,EACfC,UAAW,EACXC,OAAQ,CAAC,EAAG,QACZC,KAAK,MAEP,cAACE,EAAA,EAAD,CACEC,QAAS,SAACC,GAAD,OACP,cAACC,EAAD,2BACMD,GADN,IAEEE,gBAAiBrD,MAGrBsD,mBAAmB,EACnBC,SAAU,CAAEC,EAAG,IACfC,OAAQ,CAAEC,OAAQ,WAEpB,cAACC,EAAA,EAAD,CACEhB,KAAK,WACLD,QAAQ,YACRD,KAAK,YACLiB,OAAO,QACPE,YAAa,EACbC,KAAK,uBACLd,KAAK,IACLO,mBAAmB,WAY/B,SAASF,EAAeD,GAStB,OARAW,qBAAU,gBACcvD,IAAlB4C,EAAMY,SAAkD,IAAzBZ,EAAMY,QAAQC,OAC/Cb,EAAME,qBAAgB9C,GAEtB4C,EAAME,gBAA8B,IAAdF,EAAMc,SAE7B,CAACd,SAEkB5C,IAAlB4C,EAAMY,SAAkD,IAAzBZ,EAAMY,QAAQC,OACxC,KAIP,qBACE/C,UAAU,2BACViD,MAAO,CACL1C,OAAQ,EACR2C,QAAS,GACTC,gBAAiB,OACjBC,OAAQ,iBACRC,WAAY,UAPhB,SAUE,qBACErD,UAAU,6BACViD,MAAO,CAAEC,QAAS,EAAG3C,OAAQ,GAF/B,UAIE,qBACEP,UAAU,wBACViD,MAAO,CACLK,QAAS,QACTC,WAAY,EACZC,cAAe,EACfC,MAAO,QANX,UASE,sBAAMzD,UAAU,6BAAhB,sBACA,sBAAMA,UAAU,kCAAhB,SACGkC,EAAMwB,YAET,sBACE1D,UAAU,8BACViD,MAAO,CAAEU,WAAY,QAFvB,SAIGhE,KAAKC,MAAoB,GAAdsC,EAAMc,OAAc,KAElC,sBACEhD,UAAU,6BACViD,MAAO,CAAEU,WAAY,QAFvB,mBAQF,qBACE3D,UAAU,wBACViD,MAAO,CACLK,QAAS,QACTC,WAAY,EACZC,cAAe,EACfC,MAAO,QANX,UASE,sBAAMzD,UAAU,6BAAhB,SACGkC,EAAMY,QAAQ,GAAGtB,OAEpB,sBAAMxB,UAAU,kCAAhB,SACGkC,EAAMwB,YAET,sBACE1D,UAAU,8BACViD,MAAO,CAAEU,WAAY,QAFvB,SAIGhE,KAAKC,MACJsC,EAAMY,QAAQ,GAAGA,QAAQZ,EAAMY,QAAQ,GAAGrB,YAG9C,sBACEzB,UAAU,6BACViD,MAAO,CAAEU,WAAY,QAFvB,SAIGzB,EAAMY,QAAQ,GAAGhB,e,yDChLjB8B,EAA2C,CACtD,YAAa,CACXC,YAAa,CACX,EAAE,QAAS,UACX,EAAE,QAAS,WAEbC,YAAa,CACX,CAAC,WAAY,UACb,CAAC,UAAW,WAEdC,MC7BW,IAA0B,sCD8BrCZ,gBAAiB,WAEnBa,OAAQ,CACNH,YAAa,CACX,EAAE,SAAU,UACZ,EAAE,QAAS,YAEbC,YAAa,CACX,EAAE,UAAW,YACb,EAAE,SAAU,aAEdC,MEzCW,IAA0B,mCF0CrCZ,gBAAiB,WAEnBc,UAAW,CACTJ,YAAa,CACX,CAAC,QAAS,SACV,CAAC,QAAS,UAEZC,YAAa,CACX,CAAC,UAAW,WACZ,CAAC,UAAW,YAEdC,MGrDW,IAA0B,sCHsDrCZ,gBAAiB,WAEnBe,OAAQ,CACNL,YAAa,CACX,CAAC,SAAU,OACX,CAAC,SAAU,QAEbC,YAAa,CACX,CAAC,WAAY,SACb,CAAC,WAAY,UAEfC,MIjEW,IAA0B,mCJkErCZ,gBAAiB,WAEnB,WAAY,CACVU,YAAa,CACX,CAAC,UAAW,SACZ,CAAC,UAAW,UAEdC,YAAa,CACX,CAAC,WAAY,WACb,CAAC,WAAY,YAEfC,MK7EW,IAA0B,qCL8ErCZ,gBAAiB,WAEnBgB,MAAO,CACLN,YAAa,CACX,CAAC,QAAS,QACV,CAAC,SAAU,SAEbC,YAAa,CACX,CAAC,UAAW,UACZ,CAAC,UAAW,WAEdC,MMzFW,IAA0B,kCN0FrCZ,gBAAiB,WAEnBiB,SAAU,CACRP,YAAa,CACX,CAAC,SAAU,UACX,CAAC,SAAU,SAEbC,YAAa,CACX,CAAC,WAAY,WACb,CAAC,WAAY,YAEfC,MOrGW,IAA0B,qCPsGrCZ,gBAAiB,WAEnBkB,QAAS,CACPR,YAAa,CACX,EAAE,SAAU,WACZ,EAAE,SAAU,YAEdC,YAAa,CACX,EAAE,UAAW,WACb,EAAE,UAAW,aAEfC,MQjHW,IAA0B,oCRkHrCZ,gBAAiB,WAEnBmB,UAAW,CACTT,YAAa,CACX,CAAC,SAAU,OACX,CAAC,SAAU,SAEbC,YAAa,CACX,CAAC,WAAY,UACb,CAAC,WAAY,WAEfC,MS7HW,IAA0B,sCT8HrCZ,gBAAiB,YU/GN,SAASoB,EAAT,GAGJ,IAFTC,EAEQ,EAFRA,eACAC,EACQ,EADRA,mBAEMC,EAAQF,EAAeE,MACvBC,EAAcf,EAAac,GAC3BE,EAASvF,mBAAQ,kBAAM,IAAIwF,eAAaF,EAAYd,eAAc,CACtEc,IAJM,EAOcG,qBAPd,mBAODrF,EAPC,KAOIsF,EAPJ,KAQRlC,qBAAU,WACL,OAAHpD,QAAG,IAAHA,KAAKuF,YAAYC,YAAY,cAC5B,CAACxF,IAVI,IAYQT,EAAYC,YAAQ,uCAClC,WAAOiG,GAAP,SAAA1G,EAAA,8DACYc,IAAN4F,EADN,iEAKe5G,EAAW4G,EAAEhG,MAL5B,mFADkC,sDAQlC,CAACsF,EAAe1F,QARVK,OAWR0D,qBAAU,WACR,GAAKpD,GAAQT,EAAb,CAIA,IAAM4F,EAAS5F,EAAQmG,OAAOC,QAC5B,SAACR,EAAQS,GAAT,OAAmBT,EAAOU,OAAOD,KACjC,IAAIR,eAAa7F,EAAQmG,OAAO,GAAInG,EAAQmG,OAAO,KAGrD1F,EAAI8F,iBACJ9F,EAAI+F,UAAUZ,MACb,CAACnF,EAAKT,EAAS2F,IAElB9B,qBAAU,WACR,GAAKpD,GAAQ+E,EAAb,CAIA,IAAME,EAAQF,EAAeE,MACvBC,EAAcf,EAAac,GAEjCjF,EAAI8F,iBACJ9F,EAAIgG,aAAad,EAAYd,aAE7B,IAAM6B,EAAUjG,EAAIkG,cAAchB,EAAYd,aAAa,GAC3DpE,EAAImG,WAAWF,GAEVlB,EAAe1F,OAClBW,EAAI+F,UAAUb,EAAYb,gBAE3B,CAACrE,EAAK+E,IAET,IAAMqB,EAAmBxG,mBAAsC,WAC7D,GAAKL,GAAYyF,EAAjB,CAIA,IAAMqB,EAAa9G,EAAQQ,SAASuG,WAClC,SAACC,GAAD,OAAOA,EAAIvB,KAEb,GAAKqB,EAGL,OAAO9G,EAAQmG,OAAOW,MACrB,CAAC9G,EAASyF,IAEb,OACE,eAACwB,EAAA,EAAD,CAEEC,YAAa,SAACzG,GAAD,OAASsF,EAAOtF,IAC7BmF,OAAQA,EACR3B,MAAO,CAAEE,gBAAiBwB,EAAYxB,iBAJxC,UAME,cAACgD,EAAA,EAAD,CACEC,IAAKzB,EAAYZ,MACjBa,OAAQA,EACRyB,YAAY,0EAEbrH,GACC,cAACsH,EAAA,EAAD,CACEC,UAAWvH,EAAQmG,OACnBqB,YAAa,CAAE/C,MAAO,UAAWgD,OAAQ,KAG5CZ,GACC,cAACa,EAAA,EAAD,CACEC,OAAQd,EACRe,OAAQ,GACRJ,YAAa,CACX/C,MAAO,QACPoD,UAAW,QACXlE,YAAa,OAvBd6B,EAAeE,O,qBC3EX,SAASoC,EAAT,GAAwD,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,SAC3CC,EAAe,SAACC,GACpB,GAAIA,EAAEC,OAAOC,QAAS,CACpB,IAAMtI,EAAQV,EAAOiJ,MAAK,SAACnC,GAAD,OAAOA,EAAEhG,OAASgI,EAAEC,OAAOG,SACrDN,EAAS,CAAEtC,MAAO5F,EAAM4F,MAAO5F,YAI7ByI,EAAiBnJ,EACpBoJ,QAAO,SAAC1I,GAAD,OAAWA,EAAM4F,QAAUqC,EAAUrC,SAC5C8C,QAAO,SAAC1I,GAAD,MAA2B,YAAhBA,EAAM2I,SACxBD,QAAO,SAAC1I,GAAD,YAAqCQ,IAA1BR,EAAM4I,mBACxBC,MAAK,SAACnJ,EAAGuB,GAAJ,OAAUvB,EAAEgD,KAAKoG,cAAc7H,EAAEyB,SAEzC,OACE,qBAAKxB,UAAWC,IAAOC,UAAvB,SACE,sBAAKF,UAAWC,IAAO4H,QAAvB,UACE,yBACEP,MAAOP,EAAUrC,MACjBsC,SAAU,SAACE,GAAD,OAAOF,EAAS,CAAEtC,MAAOwC,EAAEC,OAAOG,SAF9C,UAIE,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,0BAGDC,EAAe9H,KAAI,SAACX,GAAD,eAClB,wBAEEkB,UAAW8H,IAAE7H,IAAO8H,KAAR,eACT9H,IAAO+H,UAAW,UAAAjB,EAAUjI,aAAV,eAAiBI,QAASJ,EAAMI,OAHvD,UAME,uBACEwC,KAAK,QACLF,KAAK,SACL8F,MAAOxI,EAAMI,KACbkI,SAAS,UAAAL,EAAUjI,aAAV,eAAiBI,QAASJ,EAAMI,KACzC8H,SAAUC,IAEXnI,EAAM0C,OAZF1C,EAAMI,cCtCR,SAAS+I,IAAO,IAAD,ECTvB,WAAsD,IAAD,EAClCnD,mBAASoD,OAAOC,SAASC,MADS,mBACnDA,EADmD,KAC7CC,EAD6C,KAgB1D,OAbAxF,qBAAU,WACR,IAAMyF,EAAW,WACfD,EAAQH,OAAOC,SAASC,OAI1B,OADAF,OAAOK,iBAAiB,WAAYD,GAC7B,kBAAMJ,OAAOM,oBAAoB,WAAYF,MACnD,IAMI,CAACF,EAAKK,MAAM,GAJA,SAACL,GAClBF,OAAOC,SAASC,KAAhB,WAA2BA,KDHLM,GADI,mBACrBN,EADqB,KACfC,EADe,KAEtB7D,EAAiBnF,mBAAwB,WAC7C,GAAIlB,EAAOwK,SAASP,GAClB,MAAO,CAAE1D,MAAO0D,GACX,GAAIhK,EAAOiJ,MAAK,SAACnC,GAAD,OAAOA,EAAEhG,OAASkJ,KAAO,CAC9C,IAAMtJ,EAAQV,EAAOiJ,MAAK,SAACnC,GAAD,OAAOA,EAAEhG,OAASkJ,KAC5C,MAAO,CACL1D,MAAO5F,EAAM4F,MACb5F,SAIJ,MAAO,CAAE4F,MAAO,aACf,CAAC0D,IAdwB,EAwBwBtD,wBAElDxF,GA1B0B,mBAwBrBmF,EAxBqB,KAwBDmE,EAxBC,KA4B5B,OACE,sBACE5I,UAAW8H,IAAE7H,IAAO4I,QAAR,eACT5I,IAAO6I,mBAAyCxJ,IAAzBkF,EAAe1F,QAF3C,UAKE,cAACgI,EAAD,CACEC,UAAWvC,EACXwC,SApB6B,SAAC+B,GAC9BA,EAAGjK,MACLuJ,EAAQU,EAAGjK,MAAMI,MAEjBmJ,EAAQU,EAAGrE,UAkBX,cAACH,EAAD,CACEC,eAAgBA,EAChBC,mBAAoBA,IAErBD,EAAe1F,OACd,cAACD,EAAD,CACEC,MAAO0F,EAAe1F,MACtBC,2BAA4B6J,O,OEnDtCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,S,mBCR1BnL,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,+BAA+B,KAAO,4BAA4B,SAAW,mC","file":"static/js/main.3af8166a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__2FdRQ\",\"routeSelected\":\"App_routeSelected__V3XxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ElevationChart_Container__3f2Iq\"};","import { World } from \"./types\";\n\nexport const WORLDS: World[] = [\n  \"crit-city\",\n  \"france\",\n  \"innsbruck\",\n  \"london\",\n  \"new-york\",\n  \"paris\",\n  \"richmond\",\n  \"watopia\",\n  \"yorkshire\",\n];\n","import { Route } from \"../types\";\nimport routesJSON from \"./routes.json\";\n\nexport const routes: Route[] = routesJSON as any;\n","import { Segment } from \"./types\";\n\nconst segmentCache: { [segmentSlug: string]: Promise<Segment> } = {};\n\nexport async function getSegment(segmentSlug: string): Promise<Segment> {\n  if (!segmentCache[segmentSlug]) {\n    segmentCache[segmentSlug] = fetchSegment(segmentSlug);\n  }\n\n  return await segmentCache[segmentSlug];\n}\n\nasync function fetchSegment(segmentSlug: string) {\n  const response = await fetch(`segments/${segmentSlug}.json`);\n  return await response.json();\n}\n","import uniqWith from \"lodash/uniqWith\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport styles from \"./ElevationChart.module.css\";\nimport { getSegment } from \"./SegmentRepository\";\nimport { Route } from \"./types\";\n\ninterface Props {\n  route: Route;\n  onMouseHoverDistanceChange: (distance: number | undefined) => void;\n}\n\nexport function ElevationChart({ route, onMouseHoverDistanceChange }: Props) {\n  const { result: segment } = useAsync(getSegment, [route.slug]);\n\n  const data: any[] | undefined = useMemo(() => {\n    if (segment === undefined) {\n      return;\n    }\n\n    return uniqWith(\n      segment.distance.map((distance, index) => ({\n        distance: Math.round(distance / 10) / 100,\n        elevation: segment.altitude[index],\n      })),\n      (a, b) => a.distance === b.distance\n    );\n  }, [segment]);\n\n  if (data === undefined) {\n    return null;\n  }\n\n  return (\n    <div className={styles.Container}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n          // @ts-ignore\n          baseValue=\"dataMin\"\n        >\n          <defs>\n            <linearGradient id=\"colorElevation\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"black\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"black\" stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <CartesianGrid vertical={false} />\n          <XAxis\n            name=\"Distance\"\n            dataKey=\"distance\"\n            type=\"number\"\n            allowDecimals={false}\n            tickCount={10}\n            domain={[0, \"dataMax\"]}\n            unit=\"km\"\n          />\n\n          <YAxis\n            name=\"Elevation\"\n            type=\"number\"\n            allowDecimals={false}\n            tickCount={5}\n            domain={[0, \"auto\"]}\n            unit=\"m\"\n          />\n          <Tooltip\n            content={(props) => (\n              <TooltipContent\n                {...props}\n                onMouseDistance={onMouseHoverDistanceChange}\n              />\n            )}\n            isAnimationActive={false}\n            position={{ y: 10 }}\n            cursor={{ stroke: \"black\" }}\n          />\n          <Area\n            type=\"monotone\"\n            dataKey=\"elevation\"\n            name=\"Elevation\"\n            stroke=\"black\"\n            fillOpacity={1}\n            fill=\"url(#colorElevation)\"\n            unit=\"m\"\n            isAnimationActive={false}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\ninterface TooltipContentProps extends TooltipProps<any, any> {\n  onMouseDistance: (distance: number | undefined) => void;\n}\n\nfunction TooltipContent(props: TooltipContentProps) {\n  useEffect(() => {\n    if (props.payload === undefined || props.payload.length === 0) {\n      props.onMouseDistance(undefined);\n    } else {\n      props.onMouseDistance(props.label * 1_000);\n    }\n  }, [props]);\n\n  if (props.payload === undefined || props.payload.length === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      className=\"recharts-default-tooltip\"\n      style={{\n        margin: 0,\n        padding: 10,\n        backgroundColor: \"#fff\",\n        border: \"1px solid #ccc\",\n        whiteSpace: \"nowrap\",\n      }}\n    >\n      <ul\n        className=\"recharts-tooltip-item-list\"\n        style={{ padding: 0, margin: 0 }}\n      >\n        <li\n          className=\"recharts-tooltip-item\"\n          style={{\n            display: \"block\",\n            paddingTop: 4,\n            paddingBottom: 4,\n            color: \"#000\",\n          }}\n        >\n          <span className=\"recharts-tooltip-item-name\">Distance</span>\n          <span className=\"recharts-tooltip-item-separator\">\n            {props.separator}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-value\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {Math.round(props.label * 10) / 10}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-unit\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            km\n          </span>\n        </li>\n\n        <li\n          className=\"recharts-tooltip-item\"\n          style={{\n            display: \"block\",\n            paddingTop: 4,\n            paddingBottom: 4,\n            color: \"#000\",\n          }}\n        >\n          <span className=\"recharts-tooltip-item-name\">\n            {props.payload[0].name}\n          </span>\n          <span className=\"recharts-tooltip-item-separator\">\n            {props.separator}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-value\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {Math.round(\n              props.payload[0].payload[props.payload[0].dataKey as string]\n            )}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-unit\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {props.payload[0].unit}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { LatLngTuple } from \"leaflet\";\nimport critCityMap from \"./maps/crit-city.png\";\nimport franceMap from \"./maps/france.png\";\nimport innsbruckMap from \"./maps/innsbruck.png\";\nimport londonMap from \"./maps/london.png\";\nimport newYorkMap from \"./maps/new-york.png\";\nimport parisMap from \"./maps/paris.png\";\nimport richmondMap from \"./maps/richmond.png\";\nimport watopiaMap from \"./maps/watopia.png\";\nimport yorkshireMap from \"./maps/yorkshire.png\";\nimport { World } from \"./types\";\n\nexport type WorldConfig = {\n  imageBounds: [LatLngTuple, LatLngTuple];\n  routeBounds: [LatLngTuple, LatLngTuple];\n  image: string;\n  backgroundColor: string;\n};\n\nexport const worldConfigs: Record<World, WorldConfig> = {\n  \"crit-city\": {\n    imageBounds: [\n      [-10.3657, 165.7824],\n      [-10.4038, 165.8207],\n    ],\n    routeBounds: [\n      [53.999691, -1.560305],\n      [53.99099, -1.545435],\n    ],\n    image: critCityMap,\n    backgroundColor: \"#7c9938\",\n  },\n  france: {\n    imageBounds: [\n      [-21.64155, 166.1384],\n      [-21.7564, 166.26125],\n    ],\n    routeBounds: [\n      [-21.652087, 166.148225],\n      [-21.74491, 166.251404],\n    ],\n    image: franceMap,\n    backgroundColor: \"#6f992d\",\n  },\n  innsbruck: {\n    imageBounds: [\n      [47.2947, 11.3501],\n      [47.2055, 11.4822],\n    ],\n    routeBounds: [\n      [47.280902, 11.386414],\n      [47.214544, 11.445934],\n    ],\n    image: innsbruckMap,\n    backgroundColor: \"#7c9938\",\n  },\n  london: {\n    imageBounds: [\n      [51.5362, -0.1776],\n      [51.4601, -0.0555],\n    ],\n    routeBounds: [\n      [51.511272, -0.164224],\n      [51.474343, -0.061869],\n    ],\n    image: londonMap,\n    backgroundColor: \"#6f992d\",\n  },\n  \"new-york\": {\n    imageBounds: [\n      [40.81725, -74.0227],\n      [40.74085, -73.9222],\n    ],\n    routeBounds: [\n      [40.799618, -73.982068],\n      [40.763547, -73.949602],\n    ],\n    image: newYorkMap,\n    backgroundColor: \"#bbbbb7\",\n  },\n  paris: {\n    imageBounds: [\n      [48.9058, 2.2561],\n      [48.82945, 2.3722],\n    ],\n    routeBounds: [\n      [48.874328, 2.294207],\n      [48.860895, 2.331992],\n    ],\n    image: parisMap,\n    backgroundColor: \"#b9b9b9\",\n  },\n  richmond: {\n    imageBounds: [\n      [37.5774, -77.48954],\n      [37.5014, -77.394],\n    ],\n    routeBounds: [\n      [37.558393, -77.467668],\n      [37.520429, -77.415864],\n    ],\n    image: richmondMap,\n    backgroundColor: \"#7c9938\",\n  },\n  watopia: {\n    imageBounds: [\n      [-11.62597, 166.87747],\n      [-11.70255, 167.03255],\n    ],\n    routeBounds: [\n      [-11.634595, 166.88756],\n      [-11.693004, 167.002777],\n    ],\n    image: watopiaMap,\n    backgroundColor: \"#0884e2\",\n  },\n  yorkshire: {\n    imageBounds: [\n      [54.0254, -1.632],\n      [53.9491, -1.5022],\n    ],\n    routeBounds: [\n      [53.999691, -1.592961],\n      [53.974875, -1.539474],\n    ],\n    image: yorkshireMap,\n    backgroundColor: \"#7c9938\",\n  },\n};\n","export default __webpack_public_path__ + \"static/media/crit-city.3bab2d0f.png\";","export default __webpack_public_path__ + \"static/media/france.aded90ff.png\";","export default __webpack_public_path__ + \"static/media/innsbruck.9821ed90.png\";","export default __webpack_public_path__ + \"static/media/london.54ae112e.png\";","export default __webpack_public_path__ + \"static/media/new-york.5bf9b5e8.png\";","export default __webpack_public_path__ + \"static/media/paris.d1eaa520.png\";","export default __webpack_public_path__ + \"static/media/richmond.72df812b.png\";","export default __webpack_public_path__ + \"static/media/watopia.0901a23e.png\";","export default __webpack_public_path__ + \"static/media/yorkshire.b83235cf.png\";","import { LatLngBounds, LatLngExpression, Map } from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport { Circle, ImageOverlay, MapContainer, Polyline } from \"react-leaflet\";\nimport { RouteSelection } from \"./RouteSelector\";\nimport { getSegment } from \"./SegmentRepository\";\nimport { Route } from \"./types\";\nimport { worldConfigs } from \"./worldConfig\";\n\ninterface Props {\n  routeSelection: RouteSelection;\n  mouseHoverDistance: number | undefined;\n}\n\nexport default function RouteMap({\n  routeSelection,\n  mouseHoverDistance,\n}: Props) {\n  const world = routeSelection.world;\n  const worldConfig = worldConfigs[world];\n  const bounds = useMemo(() => new LatLngBounds(worldConfig.imageBounds), [\n    worldConfig,\n  ]);\n\n  const [map, setMap] = useState<Map | undefined>();\n  useEffect(() => {\n    map?.zoomControl.setPosition(\"topright\");\n  }, [map]);\n\n  const { result: segment } = useAsync(\n    async (r?: Route) => {\n      if (r === undefined) {\n        return;\n      }\n\n      return await getSegment(r.slug);\n    },\n    [routeSelection.route]\n  );\n\n  useEffect(() => {\n    if (!map || !segment) {\n      return;\n    }\n\n    const bounds = segment.latlng.reduce(\n      (bounds, coord) => bounds.extend(coord),\n      new LatLngBounds(segment.latlng[0], segment.latlng[0])\n    );\n\n    map.invalidateSize();\n    map.fitBounds(bounds);\n  }, [map, segment, worldConfig]);\n\n  useEffect(() => {\n    if (!map || !routeSelection) {\n      return;\n    }\n\n    const world = routeSelection.world;\n    const worldConfig = worldConfigs[world];\n\n    map.invalidateSize();\n    map.setMaxBounds(worldConfig.imageBounds);\n\n    const minZoom = map.getBoundsZoom(worldConfig.imageBounds, false);\n    map.setMinZoom(minZoom);\n\n    if (!routeSelection.route) {\n      map.fitBounds(worldConfig.routeBounds);\n    }\n  }, [map, routeSelection]);\n\n  const pointCoordinates = useMemo<LatLngExpression | undefined>(() => {\n    if (!segment || !mouseHoverDistance) {\n      return;\n    }\n\n    const pointIndex = segment.distance.findIndex(\n      (d) => d > mouseHoverDistance\n    );\n    if (!pointIndex) {\n      return;\n    }\n    return segment.latlng[pointIndex];\n  }, [segment, mouseHoverDistance]);\n\n  return (\n    <MapContainer\n      key={routeSelection.world}\n      whenCreated={(map) => setMap(map)}\n      bounds={bounds}\n      style={{ backgroundColor: worldConfig.backgroundColor }}\n    >\n      <ImageOverlay\n        url={worldConfig.image}\n        bounds={bounds}\n        attribution='&amp;copy <a href=\"https://zwift.com\" rel=\"noreferrer noopener\">Zwift</a>'\n      />\n      {segment && (\n        <Polyline\n          positions={segment.latlng}\n          pathOptions={{ color: \"#fc6719\", weight: 4 }}\n        />\n      )}\n      {pointCoordinates && (\n        <Circle\n          center={pointCoordinates}\n          radius={10}\n          pathOptions={{\n            color: \"black\",\n            fillColor: \"black\",\n            fillOpacity: 1,\n          }}\n        />\n      )}\n    </MapContainer>\n  );\n}\n","import c from \"classnames\";\nimport { ChangeEvent } from \"react\";\nimport { routes } from \"./data/routes\";\nimport styles from \"./RouteSelector.module.css\";\nimport { Route, World } from \"./types\";\n\nexport interface RouteSelection {\n  world: World;\n  route?: Route;\n}\n\ninterface Props {\n  selection: RouteSelection;\n  onChange: (route: RouteSelection) => void;\n}\nexport default function RouteSelector({ selection, onChange }: Props) {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      const route = routes.find((r) => r.slug === e.target.value)!;\n      onChange({ world: route.world, route });\n    }\n  };\n\n  const filteredRoutes = routes\n    .filter((route) => route.world === selection.world)\n    .filter((route) => route.sport === \"cycling\")\n    .filter((route) => route.stravaSegmentId !== undefined)\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.Sidebar}>\n        <select\n          value={selection.world}\n          onChange={(e) => onChange({ world: e.target.value as World })}\n        >\n          <option value=\"crit-city\">Crit City</option>\n          <option value=\"france\">France</option>\n          <option value=\"innsbruck\">Innsbruck</option>\n          <option value=\"london\">London</option>\n          <option value=\"new-york\">New York</option>\n          <option value=\"paris\">Paris</option>\n          <option value=\"richmond\">Richmond</option>\n          <option value=\"watopia\">Watopia</option>\n          <option value=\"yorkshire\">Yorkshire</option>\n        </select>\n\n        {filteredRoutes.map((route) => (\n          <label\n            key={route.slug}\n            className={c(styles.Item, {\n              [styles.selected]: selection.route?.slug === route.slug,\n            })}\n          >\n            <input\n              type=\"radio\"\n              name=\"routes\"\n              value={route.slug}\n              checked={selection.route?.slug === route.slug}\n              onChange={handleChange}\n            />\n            {route.name}\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import c from \"classnames\";\nimport React, { useMemo, useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport { WORLDS } from \"./constants\";\nimport { routes } from \"./data/routes\";\nimport { ElevationChart } from \"./ElevationChart\";\nimport { useHash } from \"./hooks/useHash\";\nimport RouteMap from \"./RouteMap\";\nimport RouteSelector, { RouteSelection } from \"./RouteSelector\";\nimport { World } from \"./types\";\n\nexport default function App() {\n  const [hash, setHash] = useHash();\n  const routeSelection = useMemo<RouteSelection>(() => {\n    if (WORLDS.includes(hash as any)) {\n      return { world: hash as World };\n    } else if (routes.find((r) => r.slug === hash)) {\n      const route = routes.find((r) => r.slug === hash)!;\n      return {\n        world: route.world,\n        route,\n      };\n    }\n\n    return { world: \"watopia\" as World };\n  }, [hash]);\n\n  const handleRouteSelectionChange = (rs: RouteSelection) => {\n    if (rs.route) {\n      setHash(rs.route.slug);\n    } else {\n      setHash(rs.world);\n    }\n  };\n\n  const [mouseHoverDistance, setMouseHoverDistance] = useState<\n    number | undefined\n  >(undefined);\n\n  return (\n    <div\n      className={c(styles.Wrapper, {\n        [styles.routeSelected]: routeSelection.route !== undefined,\n      })}\n    >\n      <RouteSelector\n        selection={routeSelection}\n        onChange={handleRouteSelectionChange}\n      />\n      <RouteMap\n        routeSelection={routeSelection}\n        mouseHoverDistance={mouseHoverDistance}\n      />\n      {routeSelection.route && (\n        <ElevationChart\n          route={routeSelection.route}\n          onMouseHoverDistanceChange={setMouseHoverDistance}\n        />\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useHash(): [string, (hash: string) => void] {\n  const [hash, setHash] = useState(window.location.hash);\n\n  useEffect(() => {\n    const listener = () => {\n      setHash(window.location.hash);\n    };\n\n    window.addEventListener(\"popstate\", listener);\n    return () => window.removeEventListener(\"popstate\", listener);\n  }, []);\n\n  const updateHash = (hash: string) => {\n    window.location.hash = `#${hash}`;\n  };\n\n  return [hash.slice(1), updateHash];\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"RouteSelector_Container__2aeQm\",\"Sidebar\":\"RouteSelector_Sidebar__25tGa\",\"Item\":\"RouteSelector_Item__402nz\",\"selected\":\"RouteSelector_selected__2JMs6\"};"],"sourceRoot":""}