{"version":3,"sources":["App.module.css","ElevationChart.module.css","data/index.ts","hooks/useSettings.ts","services/search.ts","components/SettingsDialog/index.tsx","StravaSegmentRepository.ts","components/ElevationGradient/index.tsx","components/ElevationChartPreview/index.tsx","components/Sidebar/SearchResultCardRoute.tsx","hooks/useOnScreen.tsx","components/Sidebar/SearchResultCardWorld.tsx","components/Sidebar/SearchResultList.tsx","components/Sidebar/index.tsx","ElevationChart.tsx","hooks/useHash.ts","worldConfig.ts","maps/crit-city.png","maps/france.png","maps/innsbruck.png","maps/london.png","maps/new-york.png","maps/paris.png","maps/richmond.png","maps/watopia.png","maps/yorkshire.png","RouteMap.tsx","App.tsx","index.tsx","components/Sidebar/index.module.css"],"names":["module","exports","routes","routesJSON","segments","segmentsJSON","worlds","worldsJSON","LOCAL_STORAGE_KEY","listeners","loadSettings","rawSettings","localStorage","getItem","sport","JSON","parse","useSettings","useState","settings","setSettings","useEffect","listener","newSettings","push","splice","indexOf","useCallback","setItem","stringify","saveSettings","forEach","searchResults","map","world","type","terms","name","t","toLocaleLowerCase","data","filter","route","undefined","stravaSegmentId","find","w","slug","searchResultTypes","title","segment","SettingsDialog","visible","onClose","handleSportChange","e","target","checked","value","Dialog","id","aria-labelledby","onRequestClose","DialogHeader","DialogTitle","DialogContent","Fieldset","legend","Radio","label","onChange","DialogFooter","Button","onClick","cache","getStravaSegmentStream","segmentSlug","stream","a","cacheKey","fetchStravaSegmentStream","getStravaSegmentStreams","streams","Promise","all","streamData","Object","fromEntries","i","fetch","response","json","ElevationGradient","x1","y1","x2","y2","offset","stopColor","stopOpacity","REQUIRED_STREAMS","ElevationChartPreview","useAsync","result","useMemo","filteredData","uniqWith","distance","index","Math","round","elevation","altitude","b","lowestElevation","min","d","AreaChart","height","width","baseValue","XAxis","dataKey","domain","unit","hide","YAxis","allowDecimals","Area","stroke","fillOpacity","fill","isAnimationActive","CircularProgress","small","circleStyle","SearchResultCardRoute","ListItem","secondaryText","getRouteInfo","rightAddonType","rightAddon","ChartContainer","ref","useRef","onScreen","isIntersecting","setIntersecting","current","observer","IntersectionObserver","entry","observe","unobserve","useOnScreen","style","pointerEvents","SearchResultCardWorld","r","length","s","SearchResultList","onResultClick","searchResult","Divider","ListSubheader","SearchResultCard","Sidebar","selection","query","setQuery","settingsDialogVisible","setSettingsDialogVisible","term","split","sr","every","some","srt","includes","search","className","styles","Container","List","SearchBox","SimpleListItem","TextField","placeholder","isRightAddon","rightChildren","buttonType","right","position","aria-label","FontIcon","NoGapDivider","sort","localeCompare","BottomMenu","ElevationChart","onMouseHoverDistanceChange","ResponsiveContainer","margin","top","left","bottom","CartesianGrid","vertical","tickCount","Tooltip","content","props","TooltipContent","onMouseDistance","y","cursor","payload","padding","backgroundColor","border","whiteSpace","display","paddingTop","paddingBottom","color","separator","fontWeight","updateHash","hash","window","location","worldConfigs","imageBounds","initialBounds","image","france","innsbruck","london","paris","richmond","watopia","yorkshire","RouteMap","routeSelection","mouseHoverDistance","worldConfig","filteredSegments","stravaSegmentsInWorld","fs","stravaSegments","stravaData","setMap","zoomControl","setPosition","routeStravaSegment","bounds","latlng","reduce","coord","extend","LatLngBounds","console","log","getNorth","getWest","getSouth","getEast","invalidateSize","fitBounds","setMaxBounds","minZoom","getBoundsZoom","setMinZoom","pointCoordinates","pointIndex","findIndex","MapContainer","whenCreated","maxZoom","ImageOverlay","url","attribution","Pane","Polyline","positions","pathOptions","weight","LayersControl","Overlay","LayerGroup","Circle","center","radius","fillColor","ScaleControl","App","setHash","addEventListener","removeEventListener","slice","useHash","handleRouteSelectionChange","rs","setMouseHoverDistance","c","Wrapper","routeSelected","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eed14c9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__2FdRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ElevationChart_Container__3f2Iq\"};","import { Route, Segment, World } from \"../types\";\nimport routesJSON from \"./routes.json\";\nimport segmentsJSON from \"./segments.json\";\nimport worldsJSON from \"./worlds.json\";\n\nexport const routes: Route[] = routesJSON as any;\nexport const segments: Segment[] = segmentsJSON as any;\nexport const worlds: World[] = worldsJSON as any;\n\n","import { useCallback, useEffect, useState } from \"react\";\nimport { Settings } from \"../types\";\n\nconst LOCAL_STORAGE_KEY = \"settings\";\n\ntype Listener = (settings: Settings) => void;\nconst listeners: Listener[] = [];\n\nfunction loadSettings(): Settings {\n  try {\n    const rawSettings = localStorage.getItem(LOCAL_STORAGE_KEY) ?? \"{}\";\n    const settings: Partial<Settings> = JSON.parse(rawSettings);\n\n    return {\n      sport: settings.sport ?? \"cycling\",\n    };\n  } catch {\n    return {\n      sport: \"cycling\",\n    };\n  }\n}\n\nfunction saveSettings(settings: Settings) {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(settings));\n}\n\nexport function useSettings(): [Settings, (settings: Settings) => void] {\n  const [settings, setSettings] = useState(loadSettings);\n\n  useEffect(() => {\n    const listener: Listener = (newSettings) => {\n      setSettings(newSettings);\n    };\n    listeners.push(listener);\n\n    return () => {\n      listeners.splice(listeners.indexOf(listener), 1);\n    };\n  }, [settings]);\n\n  const updateSettings = useCallback((newSettings: Settings) => {\n    setSettings(newSettings);\n    saveSettings(newSettings)\n    listeners.forEach((listener) => listener(newSettings));\n  }, []);\n\n  return [settings, updateSettings];\n}\n","import { routes, worlds } from \"../data\";\nimport { Route, Segment, Sport, World } from \"../types\";\n\nexport type SearchResult =\n  | SearchResultWorld\n  | SearchResultRoute\n  | SearchResultSegment;\n\nexport interface SearchResultWorld {\n  type: \"world\";\n  terms: string[];\n  data: World;\n}\n\nexport interface SearchResultRoute {\n  type: \"route\";\n  terms: string[];\n  data: Route;\n}\n\nexport interface SearchResultSegment {\n  type: \"segment\";\n  terms: string[];\n  data: Segment;\n}\n\nconst searchResults: SearchResult[] = [\n  ...worlds.map((world) => ({\n    type: \"world\" as const,\n    terms: [world.name].map((t) => t.toLocaleLowerCase()),\n    data: world,\n  })),\n  ...routes\n    .filter((route) => route.stravaSegmentId !== undefined)\n    .map((route) => ({\n      type: \"route\" as const,\n      terms: [\n        worlds.find((w) => w.slug === route.world)!.name,\n        route.name,\n      ].map((t) => t.toLocaleLowerCase()),\n      data: route,\n    })),\n  //   ...segments\n  //     .filter((route) => route.stravaSegmentId !== undefined)\n  //     .map((segment) => ({\n  //     type: \"segment\" as const,\n  //     terms: [\n  //       worlds.find((w) => w.slug === segment.slug)!.name,\n  //       segment.name,\n  //     ].map((t) => t.toLocaleLowerCase()),\n  //     data: segment,\n  //   })),\n];\n\nexport function search(term: string, sport: Sport): SearchResult[] {\n  const terms = term\n    .toLocaleLowerCase()\n    .split(\" \")\n    .filter((t) => t.length > 0);\n\n  return searchResults\n    .filter((sr) => {\n      if (sr.type === \"world\") {\n        return true;\n      } else {\n        return sr.data.sport === sport;\n      }\n    })\n\n    .filter((sr) =>\n      terms.every((t) => sr.terms.some((srt) => srt.includes(t)))\n    );\n}\n\nexport const searchResultTypes = {\n  world: {\n    title: \"Worlds\",\n  },\n  route: {\n    title: \"Routes\",\n  },\n  segment: {\n    title: \"Segments\",\n  },\n};\n","import { Button } from \"@react-md/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@react-md/dialog\";\nimport { Fieldset, Radio } from \"@react-md/form\";\nimport React, { ChangeEvent } from \"react\";\nimport { useSettings } from \"../../hooks/useSettings\";\nimport { Sport } from \"../../types\";\n\ninterface Props {\n  visible: boolean;\n  onClose: () => void;\n}\n\nexport function SettingsDialog({ visible, onClose }: Props) {\n  const [settings, setSettings] = useSettings();\n\n  const handleSportChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      setSettings({ ...settings, sport: e.target.value as Sport });\n    }\n  };\n  return (\n    <Dialog\n      id=\"settings-dialog\"\n      aria-labelledby=\"settings-dialog-title\"\n      visible={visible}\n      onRequestClose={onClose}\n    >\n      <DialogHeader>\n        <DialogTitle id=\"settings-dialog-title\">Settings</DialogTitle>\n      </DialogHeader>\n      <DialogContent>\n        <Fieldset legend=\"Sport\">\n          <Radio\n            id=\"settings-dialog-cycling\"\n            name=\"settings-dialog-sport\"\n            label=\"Cycling\"\n            value=\"cycling\"\n            checked={settings.sport === \"cycling\"}\n            onChange={handleSportChange}\n          />\n          <Radio\n            id=\"settings-dialog-running\"\n            name=\"settings-dialog-sport\"\n            label=\"Running\"\n            value=\"running\"\n            checked={settings.sport === \"running\"}\n            onChange={handleSportChange}\n          />\n        </Fieldset>\n      </DialogContent>\n      <DialogFooter>\n        <Button id=\"dialog-close\" onClick={onClose}>\n          Close\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import { StravaSegment } from \"./types\";\n\nconst cache: { [cacheKey: string]: Promise<any> } = {};\n\nexport async function getStravaSegment(\n  segmentSlug: string\n): Promise<StravaSegment> {\n  if (!cache[segmentSlug]) {\n    cache[segmentSlug] = fetchStravaSegment(segmentSlug);\n  }\n\n  return await cache[segmentSlug];\n}\n\nexport async function getStravaSegmentStream<\n  Stream extends \"altitude\" | \"distance\" | \"latlng\"\n>(segmentSlug: string, stream: Stream): Promise<StravaSegment[Stream]> {\n  const cacheKey = `${segmentSlug}-${stream}`;\n  if (!cache[cacheKey]) {\n    cache[cacheKey] = fetchStravaSegmentStream(segmentSlug, stream);\n  }\n\n  return cache[cacheKey];\n}\n\nexport async function getStravaSegmentStreams<\n  Stream extends \"altitude\" | \"distance\" | \"latlng\"\n>(\n  segmentSlug: string,\n  streams: ReadonlyArray<Stream>\n): Promise<Pick<StravaSegment, Stream>> {\n  const streamData = await Promise.all(\n    streams.map((stream) => getStravaSegmentStream(segmentSlug, stream))\n  );\n\n  // @ts-ignore\n  return Object.fromEntries(\n    streams.map((stream, i) => [stream, streamData[i]])\n  );\n}\n\nasync function fetchStravaSegment(segmentSlug: string) {\n  const response = await Promise.all([\n    getStravaSegmentStream(segmentSlug, \"altitude\"),\n    getStravaSegmentStream(segmentSlug, \"distance\"),\n    getStravaSegmentStream(segmentSlug, \"latlng\"),\n  ]);\n\n  return {\n    altitude: response[0],\n    distance: response[1],\n    latlng: response[2],\n  };\n}\n\nasync function fetchStravaSegmentStream<\n  Stream extends \"altitude\" | \"distance\" | \"latlng\"\n>(segmentSlug: string, stream: Stream): Promise<StravaSegment[Stream]> {\n  const response = await fetch(`segments/${segmentSlug}/${stream}.json`);\n  return await response.json();\n}\n","export function ElevationGradient() {\n  return (\n    <linearGradient id=\"colorElevation\"  x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"black\" stopOpacity={0.8} />\n      <stop offset=\"95%\" stopColor=\"black\" stopOpacity={0} />\n    </linearGradient>\n  );\n}\n","import { CircularProgress } from \"@react-md/progress\";\nimport uniqWith from \"lodash/uniqWith\";\nimport React, { useMemo } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport { Area, AreaChart, XAxis, YAxis } from \"recharts\";\nimport { getStravaSegmentStreams } from \"../../StravaSegmentRepository\";\nimport { Route, StravaSegment } from \"../../types\";\nimport { ElevationGradient } from \"../ElevationGradient\";\n\ninterface Props {\n  route: Route;\n}\n\nconst REQUIRED_STREAMS = [\"altitude\", \"distance\"];\n\nexport function ElevationChartPreview({ route }: Props) {\n  const { result: segment } = useAsync<\n    Pick<StravaSegment, \"altitude\" | \"distance\">\n  >(getStravaSegmentStreams, [route.slug, REQUIRED_STREAMS]);\n\n  const data: any[] | undefined = useMemo(() => {\n    if (segment === undefined) {\n      return;\n    }\n\n    const filteredData = uniqWith(\n      segment.distance.map((distance, index) => ({\n        distance: Math.round(distance / 100) / 10,\n        elevation: segment.altitude[index],\n      })),\n      (a, b) => a.distance === b.distance\n    );\n\n    // remove negative elevation\n    const lowestElevation = Math.min(...filteredData.map((d) => d.elevation));\n    return filteredData.map((d) => ({\n      ...d,\n      elevation: d.elevation - lowestElevation,\n    }));\n  }, [segment]);\n\n  if (!data) {\n    return (\n      <CircularProgress\n        id={`elevation-preview-${route.slug}`}\n        small\n        circleStyle={{ stroke: \"black\" }}\n      />\n    );\n  }\n\n  return (\n    <AreaChart\n      height={50}\n      width={100}\n      data={data}\n      // @ts-ignore\n      baseValue=\"dataMin\"\n    >\n      <defs>\n        <ElevationGradient />\n      </defs>\n\n      <XAxis\n        dataKey=\"distance\"\n        type=\"number\"\n        domain={[0, \"dataMax\"]}\n        unit=\"km\"\n        hide={true}\n      />\n\n      <YAxis\n        dataKey=\"elevation\"\n        type=\"number\"\n        allowDecimals={false}\n        domain={[0, 750]}\n        unit=\"m\"\n        hide={true}\n      />\n\n      <Area\n        type=\"monotone\"\n        dataKey=\"elevation\"\n        name=\"Elevation\"\n        stroke=\"black\"\n        fillOpacity={1}\n        fill=\"url(#colorElevation)\"\n        unit=\"m\"\n        isAnimationActive={false}\n      />\n    </AreaChart>\n  );\n}\n","import { ListItem } from \"@react-md/list\";\nimport React, { useRef } from \"react\";\nimport { useOnScreen } from \"../../hooks/useOnScreen\";\nimport { Route } from \"../../types\";\nimport { ElevationChartPreview } from \"../ElevationChartPreview\";\n\nexport interface Props {\n  route: Route;\n  onClick: () => void;\n}\n\nexport function SearchResultCardRoute({ route, onClick }: Props) {\n  return (\n    <ListItem\n      secondaryText={getRouteInfo(route)}\n      onClick={onClick}\n      rightAddonType=\"large-media\"\n      rightAddon={<ChartContainer route={route} />}\n    >\n      {route.name}\n    </ListItem>\n  );\n}\n\nfunction getRouteInfo(route: Route) {\n  return `${route.distance}km | ${route.elevation}m`;\n}\n\ninterface ChartProps {\n  route: Route;\n}\n\nfunction ChartContainer({ route }: ChartProps) {\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  const onScreen = useOnScreen(ref);\n\n  return (\n    <div ref={ref} style={{ width: \"100%\", pointerEvents: \"none\" }}>\n      {onScreen ? <ElevationChartPreview route={route} /> : null}\n    </div>\n  );\n}\n","import { MutableRefObject, useEffect, useState } from \"react\";\n\n/**\n * @see https://usehooks.com/useOnScreen/\n */\nexport function useOnScreen(ref: MutableRefObject<HTMLElement | null>) {\n  const [isIntersecting, setIntersecting] = useState(false);\n  useEffect(() => {\n    const current = ref.current;\n\n    const observer = new IntersectionObserver(([entry]) => {\n      setIntersecting(entry.isIntersecting);\n    });\n    if (current) {\n      observer.observe(current);\n    }\n    return () => {\n      if (current) {\n        observer.unobserve(current);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return isIntersecting;\n}\n","import { ListItem } from \"@react-md/list\";\nimport { routes, segments } from \"../../data\";\nimport { useSettings } from \"../../hooks/useSettings\";\nimport { World } from \"../../types\";\n\nexport interface Props {\n  world: World;\n  onClick: () => void;\n}\n\nexport function SearchResultCardWorld({ world, onClick }: Props) {\n  const [settings] = useSettings();\n  const secondaryText = `${\n    routes\n      .filter((r) => r.sport === settings.sport)\n      .filter((r) => r.world === world.slug).length\n  } routes | ${\n    segments\n      .filter((s) => s.sport === settings.sport)\n      .filter((s) => s.world === world.slug).length\n  } segments`;\n\n  return (\n    <ListItem secondaryText={secondaryText} onClick={onClick}>\n      {world.name}\n    </ListItem>\n  );\n}\n","import { Divider } from \"@react-md/divider\";\nimport { ListSubheader } from \"@react-md/list\";\nimport React, { Fragment } from \"react\";\nimport { SearchResult, searchResultTypes } from \"../../services/search\";\nimport { SearchResultCardRoute } from \"./SearchResultCardRoute\";\nimport { SearchResultCardWorld } from \"./SearchResultCardWorld\";\n\ninterface Props {\n  searchResults: ReadonlyArray<SearchResult>;\n  onResultClick: (searchResult: SearchResult) => void;\n}\n\nexport function SearchResultList({ searchResults, onResultClick }: Props) {\n  return (\n    <>\n      {searchResults.map((searchResult, i) => (\n        <Fragment key={searchResult.data.slug}>\n          {searchResults[i - 1]?.type !== searchResult.type && (\n            <>\n              {searchResults[i - 1] && <Divider />}\n              <ListSubheader>\n                {searchResultTypes[searchResult.type].title}\n              </ListSubheader>\n            </>\n          )}\n          <SearchResultCard\n            searchResult={searchResult}\n            onClick={() => onResultClick(searchResult)}\n          />\n        </Fragment>\n      ))}\n    </>\n  );\n}\n\ninterface SearchResultCardProps {\n  searchResult: SearchResult;\n  onClick: () => void;\n}\n\nfunction SearchResultCard({ searchResult, onClick }: SearchResultCardProps) {\n  switch (searchResult.type) {\n    case \"world\":\n      return (\n        <SearchResultCardWorld world={searchResult.data} onClick={onClick} />\n      );\n    case \"route\":\n      return (\n        <SearchResultCardRoute route={searchResult.data} onClick={onClick} />\n      );\n    default:\n      return null;\n  }\n}\n","import { Button } from \"@react-md/button\";\nimport { Divider } from \"@react-md/divider\";\nimport { TextField } from \"@react-md/form\";\nimport { FontIcon } from \"@react-md/icon\";\nimport { List, ListItem, SimpleListItem } from \"@react-md/list\";\nimport React, { useState } from \"react\";\nimport { routes, worlds } from \"../../data\";\nimport { useSettings } from \"../../hooks/useSettings\";\nimport { search, SearchResult } from \"../../services/search\";\nimport { RouteSelection } from \"../../types\";\nimport { SettingsDialog } from \"../SettingsDialog\";\nimport styles from \"./index.module.css\";\nimport { SearchResultCardRoute } from \"./SearchResultCardRoute\";\nimport { SearchResultList } from \"./SearchResultList\";\n\ninterface Props {\n  selection: RouteSelection;\n  onChange: (route: RouteSelection) => void;\n}\nexport function Sidebar({ selection, onChange }: Props) {\n  const [query, setQuery] = useState(\"\");\n  const [settings] = useSettings();\n\n  const [settingsDialogVisible, setSettingsDialogVisible] = useState(false);\n\n  const searchResults = search(query, settings.sport);\n\n  const handleSearchResultClick = (searchResult: SearchResult) => {\n    switch (searchResult.type) {\n      case \"world\":\n        onChange({ world: searchResult.data.slug });\n        break;\n      case \"route\":\n        onChange({ world: searchResult.data.world, route: searchResult.data });\n        break;\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.Container}>\n        <List style={{ width: \"100%\" }} className={styles.SearchBox}>\n          <SimpleListItem>\n            <TextField\n              id=\"search-input\"\n              style={{ width: \"100%\" }}\n              placeholder={worlds.find((w) => w.slug === selection.world)!.name}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              isRightAddon={false}\n              rightChildren={\n                query !== \"\" && (\n                  <Button\n                    buttonType=\"icon\"\n                    style={{ right: 0, position: \"absolute\" }}\n                    onClick={() => setQuery(\"\")}\n                    aria-label=\"Clear search field\"\n                  >\n                    <FontIcon>clear</FontIcon>\n                  </Button>\n                )\n              }\n            />\n          </SimpleListItem>\n          <Divider className={styles.NoGapDivider} />\n        </List>\n        <List className={styles.List}>\n          {query === \"\" ? (\n            <>\n              {routes\n                .filter((route) => route.world === selection.world)\n                .filter((route) => route.sport === settings.sport)\n                .filter((route) => route.stravaSegmentId !== undefined)\n                .sort((a, b) => a.name.localeCompare(b.name))\n                .map((route) => (\n                  <SearchResultCardRoute\n                    route={route}\n                    key={route.slug}\n                    onClick={() =>\n                      onChange({ world: route.world, route: route })\n                    }\n                  />\n                ))}\n            </>\n          ) : (\n            <SearchResultList\n              searchResults={searchResults}\n              onResultClick={handleSearchResultClick}\n            />\n          )}\n        </List>\n        <List className={styles.BottomMenu}>\n          <Divider className={styles.NoGapDivider} />\n          <ListItem onClick={() => setSettingsDialogVisible(true)}>\n            Settings\n          </ListItem>\n        </List>\n      </div>\n      <SettingsDialog\n        visible={settingsDialogVisible}\n        onClose={() => setSettingsDialogVisible(false)}\n      />\n    </>\n  );\n}\n","import uniqWith from \"lodash/uniqWith\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { ElevationGradient } from \"./components/ElevationGradient\";\nimport styles from \"./ElevationChart.module.css\";\nimport { getStravaSegmentStreams } from \"./StravaSegmentRepository\";\nimport { Route, StravaSegment } from \"./types\";\n\ninterface Props {\n  route: Route;\n  onMouseHoverDistanceChange: (distance: number | undefined) => void;\n}\n\nconst REQUIRED_STREAMS = [\"altitude\", \"distance\"] as const;\n\nexport function ElevationChart({ route, onMouseHoverDistanceChange }: Props) {\n  const { result: segment } = useAsync<\n    Pick<StravaSegment, \"altitude\" | \"distance\">\n  >(getStravaSegmentStreams, [route.slug, REQUIRED_STREAMS]);\n\n  const data: any[] | undefined = useMemo(() => {\n    if (segment === undefined) {\n      return;\n    }\n\n    return uniqWith(\n      segment.distance.map((distance, index) => ({\n        distance: Math.round(distance / 10) / 100,\n        elevation: segment.altitude[index],\n      })),\n      (a, b) => a.distance === b.distance\n    );\n  }, [segment]);\n\n  if (data === undefined) {\n    return null;\n  }\n\n  return (\n    <div className={styles.Container}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart\n          data={data}\n          margin={{\n            top: 25,\n            right: 15,\n            left: 15,\n            bottom: 15,\n          }}\n          // @ts-ignore\n          baseValue=\"dataMin\"\n        >\n          <defs>\n            <ElevationGradient />\n          </defs>\n          <CartesianGrid vertical={false} />\n          <XAxis\n            name=\"Distance\"\n            dataKey=\"distance\"\n            type=\"number\"\n            allowDecimals={false}\n            tickCount={10}\n            domain={[0, \"dataMax\"]}\n            unit=\"km\"\n          />\n\n          <YAxis\n            name=\"Elevation\"\n            type=\"number\"\n            allowDecimals={false}\n            tickCount={5}\n            domain={[\"dataMin\", \"auto\"]}\n            unit=\"m\"\n          />\n          <Tooltip\n            content={(props) => (\n              <TooltipContent\n                {...props}\n                onMouseDistance={onMouseHoverDistanceChange}\n              />\n            )}\n            isAnimationActive={false}\n            position={{ y: 10 }}\n            cursor={{ stroke: \"black\" }}\n          />\n          <Area\n            type=\"monotone\"\n            dataKey=\"elevation\"\n            name=\"Elevation\"\n            stroke=\"black\"\n            fillOpacity={1}\n            fill=\"url(#colorElevation)\"\n            unit=\"m\"\n            isAnimationActive={false}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\ninterface TooltipContentProps extends TooltipProps<any, any> {\n  onMouseDistance: (distance: number | undefined) => void;\n}\n\nfunction TooltipContent(props: TooltipContentProps) {\n  useEffect(() => {\n    if (props.payload === undefined || props.payload.length === 0) {\n      props.onMouseDistance(undefined);\n    } else {\n      props.onMouseDistance(props.label * 1_000);\n    }\n  }, [props]);\n\n  if (props.payload === undefined || props.payload.length === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      className=\"recharts-default-tooltip\"\n      style={{\n        margin: 0,\n        padding: 10,\n        backgroundColor: \"#fff\",\n        border: \"1px solid #ccc\",\n        whiteSpace: \"nowrap\",\n      }}\n    >\n      <ul\n        className=\"recharts-tooltip-item-list\"\n        style={{ padding: 0, margin: 0 }}\n      >\n        <li\n          className=\"recharts-tooltip-item\"\n          style={{\n            display: \"block\",\n            paddingTop: 4,\n            paddingBottom: 4,\n            color: \"#000\",\n          }}\n        >\n          <span className=\"recharts-tooltip-item-name\">Distance</span>\n          <span className=\"recharts-tooltip-item-separator\">\n            {props.separator}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-value\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {Math.round(props.label * 10) / 10}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-unit\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            km\n          </span>\n        </li>\n\n        <li\n          className=\"recharts-tooltip-item\"\n          style={{\n            display: \"block\",\n            paddingTop: 4,\n            paddingBottom: 4,\n            color: \"#000\",\n          }}\n        >\n          <span className=\"recharts-tooltip-item-name\">\n            {props.payload[0].name}\n          </span>\n          <span className=\"recharts-tooltip-item-separator\">\n            {props.separator}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-value\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {Math.round(\n              props.payload[0].payload[props.payload[0].dataKey as string]\n            )}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-unit\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {props.payload[0].unit}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useHash(): [string, (hash: string) => void] {\n  const [hash, setHash] = useState(window.location.hash);\n\n  useEffect(() => {\n    const listener = () => {\n      setHash(window.location.hash);\n    };\n\n    window.addEventListener(\"popstate\", listener);\n    return () => window.removeEventListener(\"popstate\", listener);\n  }, []);\n\n  return [hash.slice(1), updateHash];\n}\n\nfunction updateHash(hash: string) {\n  window.location.hash = `#${hash}`;\n}\n","import { LatLngTuple } from \"leaflet\";\nimport critCityMap from \"./maps/crit-city.png\";\nimport franceMap from \"./maps/france.png\";\nimport innsbruckMap from \"./maps/innsbruck.png\";\nimport londonMap from \"./maps/london.png\";\nimport newYorkMap from \"./maps/new-york.png\";\nimport parisMap from \"./maps/paris.png\";\nimport richmondMap from \"./maps/richmond.png\";\nimport watopiaMap from \"./maps/watopia.png\";\nimport yorkshireMap from \"./maps/yorkshire.png\";\nimport { WorldSlug } from \"./types\";\n\nexport type WorldConfig = {\n  imageBounds: [LatLngTuple, LatLngTuple];\n  initialBounds: [LatLngTuple, LatLngTuple];\n  image: string;\n  backgroundColor: string;\n};\n\nexport const worldConfigs: Record<WorldSlug, WorldConfig> = {\n  \"crit-city\": {\n    imageBounds: [\n      [-10.3657, 165.7824],\n      [-10.4038, 165.8207],\n    ],\n    initialBounds: [\n      [-10.382352, 165.798758],\n      [-10.386016, 165.803496],\n    ],\n    image: critCityMap,\n    backgroundColor: \"#7c9938\",\n  },\n  france: {\n    imageBounds: [\n      [-21.64155, 166.1384],\n      [-21.7564, 166.26125],\n    ],\n    initialBounds: [\n      [-21.697812, 166.148225],\n      [-21.744906, 166.202642],\n    ],\n    image: franceMap,\n    backgroundColor: \"#6f992d\",\n  },\n  innsbruck: {\n    imageBounds: [\n      [47.2947, 11.3501],\n      [47.2055, 11.4822],\n    ],\n    initialBounds: [\n      [47.280902, 11.386414],\n      [47.214544, 11.445934],\n    ],\n    image: innsbruckMap,\n    backgroundColor: \"#7c9938\",\n  },\n  london: {\n    imageBounds: [\n      [51.5362, -0.1776],\n      [51.4601, -0.0555],\n    ],\n    initialBounds: [\n      [51.511261, -0.134875],\n      [51.489256, -0.072996],\n    ],\n    image: londonMap,\n    backgroundColor: \"#6f992d\",\n  },\n  \"new-york\": {\n    imageBounds: [\n      [40.81725, -74.0227],\n      [40.74085, -73.9222],\n    ],\n    initialBounds: [\n      [40.799618, -73.982068],\n      [40.763547, -73.949602],\n    ],\n    image: newYorkMap,\n    backgroundColor: \"#bbbbb7\",\n  },\n  paris: {\n    imageBounds: [\n      [48.9058, 2.2561],\n      [48.82945, 2.3722],\n    ],\n    initialBounds: [\n      [48.874328, 2.294207],\n      [48.860895, 2.331992],\n    ],\n    image: parisMap,\n    backgroundColor: \"#b9b9b9\",\n  },\n  richmond: {\n    imageBounds: [\n      [37.5774, -77.48954],\n      [37.5014, -77.394],\n    ],\n    initialBounds: [\n      [37.558393, -77.467668],\n      [37.520429, -77.415864],\n    ],\n    image: richmondMap,\n    backgroundColor: \"#7c9938\",\n  },\n  watopia: {\n    imageBounds: [\n      [-11.62597, 166.87747],\n      [-11.70255, 167.03255],\n    ],\n    initialBounds: [\n      [-11.635444, 166.93555],\n      [-11.673613, 166.972511],\n    ],\n    image: watopiaMap,\n    backgroundColor: \"#0884e2\",\n  },\n  yorkshire: {\n    imageBounds: [\n      [54.0254, -1.632],\n      [53.9491, -1.5022],\n    ],\n    initialBounds: [\n      [53.999691, -1.592961],\n      [53.974875, -1.539474],\n    ],\n    image: yorkshireMap,\n    backgroundColor: \"#7c9938\",\n  },\n};\n","export default __webpack_public_path__ + \"static/media/crit-city.3bab2d0f.png\";","export default __webpack_public_path__ + \"static/media/france.aded90ff.png\";","export default __webpack_public_path__ + \"static/media/innsbruck.9821ed90.png\";","export default __webpack_public_path__ + \"static/media/london.54ae112e.png\";","export default __webpack_public_path__ + \"static/media/new-york.5bf9b5e8.png\";","export default __webpack_public_path__ + \"static/media/paris.d1eaa520.png\";","export default __webpack_public_path__ + \"static/media/richmond.72df812b.png\";","export default __webpack_public_path__ + \"static/media/watopia.0901a23e.png\";","export default __webpack_public_path__ + \"static/media/yorkshire.b83235cf.png\";","import { LatLngBounds, LatLngExpression, Map } from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport {\n  Circle,\n  ImageOverlay,\n  LayerGroup,\n  LayersControl,\n  MapContainer,\n  Pane,\n  Polyline,\n  ScaleControl\n} from \"react-leaflet\";\nimport { segments } from \"./data\";\nimport { useSettings } from \"./hooks/useSettings\";\nimport {\n  getStravaSegmentStream,\n  getStravaSegmentStreams\n} from \"./StravaSegmentRepository\";\nimport { Route, RouteSelection, Segment } from \"./types\";\nimport { worldConfigs } from \"./worldConfig\";\n\ninterface Props {\n  routeSelection: RouteSelection;\n  mouseHoverDistance: number | undefined;\n}\n\nexport default function RouteMap({\n  routeSelection,\n  mouseHoverDistance,\n}: Props) {\n  const world = routeSelection.world;\n  const worldConfig = worldConfigs[world];\n  const [settings] = useSettings();\n\n  const filteredSegments = useMemo(\n    () =>\n      segments\n        .filter((s) => s.sport === settings.sport)\n        .filter((s) => s.world === world)\n        .filter((s) => s.stravaSegmentId !== undefined),\n    [settings.sport, world]\n  );\n  const { result: stravaSegmentsInWorld } = useAsync(\n    async (fs: Segment[]) => {\n      const stravaSegments = await Promise.all(\n        fs.map((s) => getStravaSegmentStream(s.slug, \"latlng\"))\n      );\n      return fs.map((s, i) => ({\n        ...s,\n        stravaData: stravaSegments[i],\n      }));\n    },\n    [filteredSegments]\n  );\n\n  const [map, setMap] = useState<Map | undefined>();\n  useEffect(() => {\n    map?.zoomControl.setPosition(\"topright\");\n  }, [map]);\n\n  const { result: routeStravaSegment } = useAsync(\n    async (r?: Route) => {\n      if (r === undefined) {\n        return;\n      }\n\n      return await getStravaSegmentStreams(r.slug, [\"distance\", \"latlng\"]);\n    },\n    [routeSelection.route]\n  );\n\n  useEffect(() => {\n    if (!map || !routeStravaSegment) {\n      return;\n    }\n\n    const bounds = routeStravaSegment.latlng.reduce(\n      (bounds, coord) => bounds.extend(coord),\n      new LatLngBounds(\n        routeStravaSegment.latlng[0],\n        routeStravaSegment.latlng[0]\n      )\n    );\n\n    console.log(\n      JSON.stringify([\n        [bounds.getNorth(), bounds.getWest()],\n        [bounds.getSouth(), bounds.getEast()],\n      ])\n    );\n\n    map.invalidateSize();\n    map.fitBounds(bounds);\n  }, [map, routeStravaSegment, worldConfig]);\n\n  useEffect(() => {\n    if (!map || !routeSelection) {\n      return;\n    }\n\n    const world = routeSelection.world;\n    const worldConfig = worldConfigs[world];\n\n    map.invalidateSize();\n    map.setMaxBounds(worldConfig.imageBounds);\n\n    const minZoom = map.getBoundsZoom(worldConfig.imageBounds, false);\n    map.setMinZoom(minZoom);\n\n    if (!routeSelection.route) {\n      map.fitBounds(worldConfig.initialBounds);\n    }\n  }, [map, routeSelection]);\n\n  const pointCoordinates = useMemo<LatLngExpression | undefined>(() => {\n    if (!routeStravaSegment || !mouseHoverDistance) {\n      return;\n    }\n\n    const pointIndex = routeStravaSegment.distance.findIndex(\n      (d) => d > mouseHoverDistance\n    );\n    if (!pointIndex) {\n      return;\n    }\n    return routeStravaSegment.latlng[pointIndex];\n  }, [routeStravaSegment, mouseHoverDistance]);\n\n  return (\n    <MapContainer\n      key={routeSelection.world}\n      whenCreated={(map) => setMap(map)}\n      bounds={worldConfig.imageBounds}\n      style={{ backgroundColor: worldConfig.backgroundColor }}\n      maxZoom={19}\n    >\n      <ImageOverlay\n        url={worldConfig.image}\n        bounds={worldConfig.imageBounds}\n        attribution='&amp;copy <a href=\"https://zwift.com\" rel=\"noreferrer noopener\">Zwift</a>'\n      />\n\n      <Pane name=\"route\">\n        {routeStravaSegment && (\n          <Polyline\n            positions={routeStravaSegment.latlng}\n            pathOptions={{ color: \"#fc6719\", weight: 5 }}\n          />\n        )}\n      </Pane>\n\n      <LayersControl>\n        <LayersControl.Overlay name=\"Show segments\" checked>\n          <LayerGroup>\n            <Pane name=\"segments\">\n              {stravaSegmentsInWorld?.map((s) => (\n                <Polyline\n                  key={s.slug}\n                  positions={s.stravaData}\n                  pathOptions={{ color: \"green\", weight: 5 }}\n                />\n              ))}\n            </Pane>\n          </LayerGroup>\n        </LayersControl.Overlay>\n      </LayersControl>\n\n      <Pane name=\"mouse-position\">\n        {pointCoordinates && (\n          <Circle\n            center={pointCoordinates}\n            radius={10}\n            pathOptions={{\n              color: \"black\",\n              fillColor: \"black\",\n              fillOpacity: 1,\n            }}\n          />\n        )}\n      </Pane>\n\n      <ScaleControl position=\"topright\" />\n    </MapContainer>\n  );\n}\n","import c from \"classnames\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport { Sidebar } from \"./components/Sidebar\";\nimport { routes, worlds } from \"./data\";\nimport { ElevationChart } from \"./ElevationChart\";\nimport { useHash } from \"./hooks/useHash\";\nimport RouteMap from \"./RouteMap\";\nimport { RouteSelection, WorldSlug } from \"./types\";\n\nexport default function App() {\n  const [hash, setHash] = useHash();\n  const routeSelection = useMemo<RouteSelection>(() => {\n    if (worlds.map((world) => world.slug).includes(hash as any)) {\n      return { world: hash as WorldSlug };\n    } else if (routes.find((r) => r.slug === hash)) {\n      const route = routes.find((r) => r.slug === hash)!;\n      return {\n        world: route.world,\n        route,\n      };\n    }\n\n    return { world: \"watopia\" as WorldSlug };\n  }, [hash]);\n\n  const handleRouteSelectionChange = useCallback(\n    (rs: RouteSelection) => {\n      if (rs.route) {\n        setHash(rs.route.slug);\n      } else {\n        setHash(rs.world);\n      }\n    },\n    [setHash]\n  );\n\n  const [mouseHoverDistance, setMouseHoverDistance] = useState<\n    number | undefined\n  >(undefined);\n\n  return (\n    <>\n      <div\n        className={c(styles.Wrapper, {\n          [styles.routeSelected]: routeSelection.route !== undefined,\n        })}\n      >\n        <Sidebar\n          selection={routeSelection}\n          onChange={handleRouteSelectionChange}\n        />\n        <RouteMap\n          routeSelection={routeSelection}\n          mouseHoverDistance={mouseHoverDistance}\n        />\n      </div>\n      {routeSelection.route && (\n        <ElevationChart\n          route={routeSelection.route}\n          onMouseHoverDistanceChange={setMouseHoverDistance}\n        />\n      )}\n    </>\n  );\n}\n","import \"./index.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Sidebar_Container__35ytb\",\"SearchBox\":\"Sidebar_SearchBox__3g5oO\",\"List\":\"Sidebar_List__2trxD\",\"BottomMenu\":\"Sidebar_BottomMenu__1yb_8\",\"NoGapDivider\":\"Sidebar_NoGapDivider__2LMcS\"};"],"sourceRoot":""}