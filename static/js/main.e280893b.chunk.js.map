{"version":3,"sources":["App.module.css","ElevationChart.module.css","constants.ts","data/routes.ts","SegmentRepository.ts","ElevationChart.tsx","worldConfig.ts","maps/crit-city.png","maps/france.png","maps/innsbruck.png","maps/london.png","maps/new-york.png","maps/paris.png","maps/richmond.png","maps/watopia.png","maps/yorkshire.png","util.ts","RouteMap.tsx","RouteSelector.tsx","App.tsx","hooks/useHash.ts","index.tsx","RouteSelector.module.css"],"names":["module","exports","WORLDS","routes","segmentCache","getSegment","segmentSlug","a","fetchSegment","fetch","response","json","ElevationChart","route","segment","useAsync","slug","result","data","useMemo","undefined","distance","map","index","elevation","altitude","className","styles","Container","ResponsiveContainer","width","height","AreaChart","margin","top","right","left","bottom","baseValue","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","name","dataKey","type","allowDecimals","tickCount","domain","unit","YAxis","Tooltip","content","TooltipContent","isAnimationActive","position","y","cursor","stroke","Area","fillOpacity","fill","props","payload","length","style","padding","backgroundColor","border","whiteSpace","display","paddingTop","paddingBottom","color","separator","fontWeight","Math","round","label","worldConfigs","bounds","image","france","innsbruck","london","paris","richmond","watopia","yorkshire","flipLatLng","p","RouteMap","routeSelection","mouseHoverDistance","world","worldConfig","LatLngBounds","useState","setMap","useEffect","zoomControl","setPosition","r","latlng","reduce","coord","extend","invalidateSize","fitBounds","setMaxBounds","minZoom","getBoundsZoom","setMinZoom","setZoom","animate","pointCoordinates","line","lineString","point","along","units","geometry","coordinates","MapContainer","whenCreated","ImageOverlay","url","attribution","Polyline","positions","pathOptions","weight","Circle","center","radius","fillColor","RouteSelector","selection","onChange","handleChange","e","target","checked","find","value","filteredRoutes","filter","sport","stravaSegmentId","sort","b","localeCompare","Sidebar","c","Item","selected","App","window","location","hash","setHash","listener","addEventListener","removeEventListener","slice","useHash","includes","setMouseHoverDistance","Wrapper","routeSelected","rs","onMouseHoverDistanceChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,cAAgB,6B,i/lCCAjED,EAAOC,QAAU,CAAC,UAAY,oC,qJCCjBC,EAAkB,CAC7B,YACA,SACA,YACA,SACA,WACA,QACA,WACA,UACA,aCRWC,E,wHCDPC,EAA4D,GAE3D,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,SAAAC,EAAA,6DACAH,EAAaE,KAChBF,EAAaE,GAAeE,EAAaF,IAFtC,SAKQF,EAAaE,GALrB,oF,+BAQQE,E,8EAAf,WAA4BF,GAA5B,eAAAC,EAAA,sEACyBE,MAAM,YAAD,OAAaH,EAAb,UAD9B,cACQI,EADR,gBAEeA,EAASC,OAFxB,oF,iCCSO,SAASC,EAAT,GAA2C,IAAjBC,EAAgB,EAAhBA,MACfC,EAAYC,YAASV,EAAY,CAACQ,EAAMG,OAAhDC,OAEFC,EAA0BC,mBAAQ,WACtC,QAAgBC,IAAZN,EAIJ,OAAOA,EAAQO,SAASC,KAAI,SAACD,EAAUE,GAAX,MAAsB,CAChDF,SAAUA,EAAW,IACrBG,UAAWV,EAAQW,SAASF,SAE7B,CAACT,IAEJ,YAAaM,IAATF,EACK,KAIP,qBAAKQ,UAAWC,IAAOC,UAAvB,SACE,cAACC,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,OAAzC,SACE,eAACC,EAAA,EAAD,CACEd,KAAMA,EACNe,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GAGVC,UAAU,UATZ,UAWE,+BACE,iCAAgBC,GAAG,iBAAiBC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAA5D,UACE,sBAAMC,OAAO,KAAKC,UAAU,QAAQC,YAAa,KACjD,sBAAMF,OAAO,MAAMC,UAAU,QAAQC,YAAa,SAGtD,cAACC,EAAA,EAAD,CAAeC,UAAU,IACzB,cAACC,EAAA,EAAD,CACEC,KAAK,WACLC,QAAQ,WACRC,KAAK,SACLC,eAAe,EACfC,UAAW,GACXC,OAAQ,CAAC,EAAG,WACZC,KAAK,OAGP,cAACC,EAAA,EAAD,CACEP,KAAK,YACLE,KAAK,SACLC,eAAe,EACfC,UAAW,EACXC,OAAQ,CAAC,EAAG,QACZC,KAAK,MAEP,cAACE,EAAA,EAAD,CACEC,QAASC,EACTC,mBAAmB,EACnBC,SAAU,CAAEC,EAAG,GACfC,OAAQ,CAAEC,OAAQ,WAEpB,cAACC,EAAA,EAAD,CACEd,KAAK,WACLD,QAAQ,YACRD,KAAK,YACLe,OAAO,QACPE,YAAa,EACbC,KAAK,uBACLZ,KAAK,IACLK,mBAAmB,WAQ/B,SAASD,EAAeS,GACtB,YAAsBjD,IAAlBiD,EAAMC,SAAkD,IAAzBD,EAAMC,QAAQC,OACxC,KAIP,qBACE7C,UAAU,2BACV8C,MAAO,CACLvC,OAAQ,EACRwC,QAAS,GACTC,gBAAiB,OACjBC,OAAQ,iBACRC,WAAY,UAPhB,SAUE,qBACElD,UAAU,6BACV8C,MAAO,CAAEC,QAAS,EAAGxC,OAAQ,GAF/B,UAIE,qBACEP,UAAU,wBACV8C,MAAO,CACLK,QAAS,QACTC,WAAY,EACZC,cAAe,EACfC,MAAO,QANX,UASE,sBAAMtD,UAAU,6BAAhB,sBACA,sBAAMA,UAAU,kCAAhB,SACG2C,EAAMY,YAET,sBACEvD,UAAU,8BACV8C,MAAO,CAAEU,WAAY,QAFvB,SAIGC,KAAKC,MAAoB,GAAdf,EAAMgB,OAAc,KAElC,sBACE3D,UAAU,6BACV8C,MAAO,CAAEU,WAAY,QAFvB,mBAQF,qBACExD,UAAU,wBACV8C,MAAO,CACLK,QAAS,QACTC,WAAY,EACZC,cAAe,EACfC,MAAO,QANX,UASE,sBAAMtD,UAAU,6BAAhB,SACG2C,EAAMC,QAAQ,GAAGpB,OAEpB,sBAAMxB,UAAU,kCAAhB,SACG2C,EAAMY,YAET,sBACEvD,UAAU,8BACV8C,MAAO,CAAEU,WAAY,QAFvB,SAIGC,KAAKC,MACJf,EAAMC,QAAQ,GAAGA,QAAQD,EAAMC,QAAQ,GAAGnB,YAG9C,sBACEzB,UAAU,6BACV8C,MAAO,CAAEU,WAAY,QAFvB,SAIGb,EAAMC,QAAQ,GAAGd,e,kEC5JjB8B,EAA2C,CACtD,YAAa,CACXC,OAAQ,CACN,EAAE,QAAS,UACX,EAAE,QAAS,WAEbC,MCxBW,IAA0B,sCDyBrCd,gBAAiB,WAGnBe,OAAQ,CACNF,OAAQ,CACN,EAAE,SAAU,UACZ,EAAE,QAAS,YAEbC,MEjCW,IAA0B,mCFkCrCd,gBAAiB,WAGnBgB,UAAW,CACTH,OAAQ,CACN,CAAC,QAAS,SACV,CAAC,QAAS,UAEZC,MG1CW,IAA0B,sCH2CrCd,gBAAiB,WAGnBiB,OAAQ,CACNJ,OAAQ,CACN,CAAC,SAAU,OACX,CAAC,SAAU,QAEbC,MInDW,IAA0B,mCJoDrCd,gBAAiB,WAGnB,WAAY,CACVa,OAAQ,CACN,CAAC,UAAW,SACZ,CAAC,UAAW,UAEdC,MK5DW,IAA0B,qCL6DrCd,gBAAiB,WAGnBkB,MAAO,CACLL,OAAQ,CACN,CAAC,QAAS,QACV,CAAC,SAAU,SAEbC,MMrEW,IAA0B,kCNsErCd,gBAAiB,WAGnBmB,SAAU,CACRN,OAAQ,CACN,CAAC,SAAU,UACX,CAAC,SAAU,SAEbC,MO9EW,IAA0B,qCP+ErCd,gBAAiB,WAGnBoB,QAAS,CACPP,OAAQ,CACN,EAAE,SAAU,WACZ,EAAE,SAAU,YAEdC,MQvFW,IAA0B,oCRwFrCd,gBAAiB,WAEnBqB,UAAW,CACTR,OAAQ,CACN,CAAC,SAAU,OACX,CAAC,SAAU,SAEbC,MS/FW,IAA0B,sCTgGrCd,gBAAiB,Y,QUhGd,SAASsB,EAAWC,GACzB,MAAO,CAACA,EAAE,GAAIA,EAAE,ICiBH,SAASC,EAAT,GAGJ,IAFTC,EAEQ,EAFRA,eACAC,EACQ,EADRA,mBAEMC,EAAQF,EAAeE,MACvBC,EAAchB,EAAae,GAC3Bd,EAASpE,mBAAQ,kBAAM,IAAIoF,eAAaD,EAAYf,UAAS,CACjEe,IAJM,EAOcE,qBAPd,mBAODlF,EAPC,KAOImF,EAPJ,KAQRC,qBAAU,WACL,OAAHpF,QAAG,IAAHA,KAAKqF,YAAYC,YAAY,cAC5B,CAACtF,IAVI,IAYQR,EAAYC,YAAQ,uCAClC,WAAO8F,GAAP,SAAAtG,EAAA,8DACYa,IAANyF,EADN,iEAKexG,EAAWwG,EAAE7F,MAL5B,mFADkC,sDAQlC,CAACmF,EAAetF,QARVI,OAWRyF,qBAAU,WACR,GAAKpF,GAAQR,EAAb,CAIA,IAAMyE,EAASzE,EAAQgG,OAAOC,QAC5B,SAACxB,EAAQyB,GAAT,OAAmBzB,EAAO0B,OAAOD,KACjC,IAAIT,eAAazF,EAAQgG,OAAO,GAAIhG,EAAQgG,OAAO,KAGrDxF,EAAI4F,iBACJ5F,EAAI6F,UAAU5B,MACb,CAACjE,EAAKR,IAET4F,qBAAU,WACR,GAAKpF,GAAQ6E,EAAb,CAIA,IAAME,EAAQF,EAAeE,MACvBC,EAAchB,EAAae,GAC3Bd,EAAS,IAAIgB,eAAaD,EAAYf,QAE5CjE,EAAI4F,iBACJ5F,EAAI8F,aAAa7B,GAEjB,IAAM8B,EAAU/F,EAAIgG,cAAc/B,GAAQ,GAC1CjE,EAAIiG,WAAWF,GAEVlB,EAAetF,OAClBS,EAAIkG,QAAQH,EAAS,CAAEI,SAAS,OAEjC,CAACnG,EAAK6E,IAET,IAAMuB,EAAmBvG,mBAAsC,WAC7D,GAAKL,GAAYsF,EAAjB,CAIA,IAAMuB,EAAOC,YAAW9G,EAAQgG,OAAOxF,IAAI0E,IACrC6B,EAAQC,YAAMH,EAAMvB,EAAoB,CAAE2B,MAAO,eACvD,MAAO,CAACF,EAAMG,SAASC,YAAY,GAAIJ,EAAMG,SAASC,YAAY,OACjE,CAACnH,EAASsF,IAEb,OACE,eAAC8B,EAAA,EAAD,CAEEC,YAAa,SAAC7G,GAAD,OAASmF,EAAOnF,IAC7BiE,OAAQA,EACRf,MAAO,CAAEE,gBAAiB4B,EAAY5B,iBAJxC,UAME,cAAC0D,EAAA,EAAD,CACEC,IAAK/B,EAAYd,MACjBD,OAAQA,EACR+C,YAAY,0EAEbxH,GACC,cAACyH,EAAA,EAAD,CACEC,UAAW1H,EAAQgG,OACnB2B,YAAa,CAAEzD,MAAO,UAAW0D,OAAQ,KAG5ChB,GACC,cAACiB,EAAA,EAAD,CACEC,OAAQlB,EACRmB,OAAQ,EACRJ,YAAa,CACXzD,MAAO,QACP8D,UAAW,QACX3E,YAAa,OAvBdgC,EAAeE,O,qBC3EX,SAAS0C,EAAT,GAAwD,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,SAC3CC,EAAe,SAACC,GACpB,GAAIA,EAAEC,OAAOC,QAAS,CACpB,IAAMxI,EAAQV,EAAOmJ,MAAK,SAACzC,GAAD,OAAOA,EAAE7F,OAASmI,EAAEC,OAAOG,SACrDN,EAAS,CAAE5C,MAAOxF,EAAMwF,MAAOxF,YAI7B2I,EAAiBrJ,EACpBsJ,QAAO,SAAC5I,GAAD,OAAWA,EAAMwF,QAAU2C,EAAU3C,SAC5CoD,QAAO,SAAC5I,GAAD,MAA2B,YAAhBA,EAAM6I,SACxBD,QAAO,SAAC5I,GAAD,YAAqCO,IAA1BP,EAAM8I,mBACxBC,MAAK,SAACrJ,EAAGsJ,GAAJ,OAAUtJ,EAAE2C,KAAK4G,cAAcD,EAAE3G,SAEzC,OACE,qBAAKxB,UAAWC,IAAOC,UAAvB,SACE,sBAAKF,UAAWC,IAAOoI,QAAvB,UACE,yBACER,MAAOP,EAAU3C,MACjB4C,SAAU,SAACE,GAAD,OAAOF,EAAS,CAAE5C,MAAO8C,EAAEC,OAAOG,SAF9C,UAIE,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,0BAGDC,EAAelI,KAAI,SAACT,GAAD,eAClB,wBAEEa,UAAWsI,IAAErI,IAAOsI,KAAR,eACTtI,IAAOuI,UAAW,UAAAlB,EAAUnI,aAAV,eAAiBG,QAASH,EAAMG,OAHvD,UAME,uBACEoC,KAAK,QACLF,KAAK,SACLqG,MAAO1I,EAAMG,KACbqI,SAAS,UAAAL,EAAUnI,aAAV,eAAiBG,QAASH,EAAMG,KACzCiI,SAAUC,IAEXrI,EAAMqC,OAZFrC,EAAMG,cCtCR,SAASmJ,IAAO,IAAD,ECTvB,WAAsD,IAAD,EAClC3D,mBAAS4D,OAAOC,SAASC,MADS,mBACnDA,EADmD,KAC7CC,EAD6C,KAgB1D,OAbA7D,qBAAU,WACR,IAAM8D,EAAW,WACfD,EAAQH,OAAOC,SAASC,OAI1B,OADAF,OAAOK,iBAAiB,WAAYD,GAC7B,kBAAMJ,OAAOM,oBAAoB,WAAYF,MACnD,IAMI,CAACF,EAAKK,MAAM,GAJA,SAACL,GAClBF,OAAOC,SAASC,KAAhB,WAA2BA,KDHLM,GADI,mBACrBN,EADqB,KACfC,EADe,KAEtBpE,EAAiBhF,mBAAwB,WAC7C,GAAIjB,EAAO2K,SAASP,GAClB,MAAO,CAAEjE,MAAOiE,GACX,GAAInK,EAAOmJ,MAAK,SAACzC,GAAD,OAAOA,EAAE7F,OAASsJ,KAAO,CAC9C,IAAMzJ,EAAQV,EAAOmJ,MAAK,SAACzC,GAAD,OAAOA,EAAE7F,OAASsJ,KAC5C,MAAO,CACLjE,MAAOxF,EAAMwF,MACbxF,SAIJ,MAAO,CAAEwF,MAAO,aACf,CAACiE,IAdwB,EAwBwB9D,wBAElDpF,GA1B0B,mBAwBrBgF,EAxBqB,KAwBD0E,EAxBC,KA4B5B,OACE,sBACEpJ,UAAWsI,IAAErI,IAAOoJ,QAAR,eACTpJ,IAAOqJ,mBAAyC5J,IAAzB+E,EAAetF,QAF3C,UAKE,cAACkI,EAAD,CACEC,UAAW7C,EACX8C,SApB6B,SAACgC,GAC9BA,EAAGpK,MACL0J,EAAQU,EAAGpK,MAAMG,MAEjBuJ,EAAQU,EAAG5E,UAkBX,cAACH,EAAD,CACEC,eAAgBA,EAChBC,mBAAoBA,IAErBD,EAAetF,OACd,cAACD,EAAD,CACEC,MAAOsF,EAAetF,MACtBqK,2BAA4BJ,O,OEnDtCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClB,EAAD,MAEFmB,SAASC,eAAe,S,mBCR1BvL,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,+BAA+B,KAAO,4BAA4B,SAAW,mC","file":"static/js/main.e280893b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__2FdRQ\",\"routeSelected\":\"App_routeSelected__V3XxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ElevationChart_Container__3f2Iq\"};","import { World } from \"./types\";\n\nexport const WORLDS: World[] = [\n  \"crit-city\",\n  \"france\",\n  \"innsbruck\",\n  \"london\",\n  \"new-york\",\n  \"paris\",\n  \"richmond\",\n  \"watopia\",\n  \"yorkshire\",\n];\n","import { Route } from \"../types\";\nimport routesJSON from \"./routes.json\";\n\nexport const routes: Route[] = routesJSON as any;\n","import { Segment } from \"./types\";\n\nconst segmentCache: { [segmentSlug: string]: Promise<Segment> } = {};\n\nexport async function getSegment(segmentSlug: string): Promise<Segment> {\n  if (!segmentCache[segmentSlug]) {\n    segmentCache[segmentSlug] = fetchSegment(segmentSlug);\n  }\n\n  return await segmentCache[segmentSlug];\n}\n\nasync function fetchSegment(segmentSlug: string) {\n  const response = await fetch(`segments/${segmentSlug}.json`);\n  return await response.json();\n}\n","import React, { useMemo } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport styles from \"./ElevationChart.module.css\";\nimport { getSegment } from \"./SegmentRepository\";\nimport { Route } from \"./types\";\n\ninterface Props {\n  route: Route;\n  onMouseHoverDistanceChange: (distance: number | undefined) => void;\n}\n\nexport function ElevationChart({ route }: Props) {\n  const { result: segment } = useAsync(getSegment, [route.slug]);\n\n  const data: any[] | undefined = useMemo(() => {\n    if (segment === undefined) {\n      return;\n    }\n\n    return segment.distance.map((distance, index) => ({\n      distance: distance / 1_000,\n      elevation: segment.altitude[index],\n    }));\n  }, [segment]);\n\n  if (data === undefined) {\n    return null;\n  }\n\n  return (\n    <div className={styles.Container}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n          // @ts-ignore\n          baseValue=\"dataMin\"\n        >\n          <defs>\n            <linearGradient id=\"colorElevation\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"black\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"black\" stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <CartesianGrid vertical={false} />\n          <XAxis\n            name=\"Distance\"\n            dataKey=\"distance\"\n            type=\"number\"\n            allowDecimals={false}\n            tickCount={10}\n            domain={[0, \"dataMax\"]}\n            unit=\"km\"\n          />\n\n          <YAxis\n            name=\"Elevation\"\n            type=\"number\"\n            allowDecimals={false}\n            tickCount={5}\n            domain={[0, \"auto\"]}\n            unit=\"m\"\n          />\n          <Tooltip\n            content={TooltipContent}\n            isAnimationActive={false}\n            position={{ y: 0 }}\n            cursor={{ stroke: \"black\" }}\n          />\n          <Area\n            type=\"monotone\"\n            dataKey=\"elevation\"\n            name=\"Elevation\"\n            stroke=\"black\"\n            fillOpacity={1}\n            fill=\"url(#colorElevation)\"\n            unit=\"m\"\n            isAnimationActive={false}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nfunction TooltipContent(props: TooltipProps<any, any>) {\n  if (props.payload === undefined || props.payload.length === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      className=\"recharts-default-tooltip\"\n      style={{\n        margin: 0,\n        padding: 10,\n        backgroundColor: \"#fff\",\n        border: \"1px solid #ccc\",\n        whiteSpace: \"nowrap\",\n      }}\n    >\n      <ul\n        className=\"recharts-tooltip-item-list\"\n        style={{ padding: 0, margin: 0 }}\n      >\n        <li\n          className=\"recharts-tooltip-item\"\n          style={{\n            display: \"block\",\n            paddingTop: 4,\n            paddingBottom: 4,\n            color: \"#000\",\n          }}\n        >\n          <span className=\"recharts-tooltip-item-name\">Distance</span>\n          <span className=\"recharts-tooltip-item-separator\">\n            {props.separator}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-value\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {Math.round(props.label * 10) / 10}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-unit\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            km\n          </span>\n        </li>\n\n        <li\n          className=\"recharts-tooltip-item\"\n          style={{\n            display: \"block\",\n            paddingTop: 4,\n            paddingBottom: 4,\n            color: \"#000\",\n          }}\n        >\n          <span className=\"recharts-tooltip-item-name\">\n            {props.payload[0].name}\n          </span>\n          <span className=\"recharts-tooltip-item-separator\">\n            {props.separator}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-value\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {Math.round(\n              props.payload[0].payload[props.payload[0].dataKey as string]\n            )}\n          </span>\n          <span\n            className=\"recharts-tooltip-item-unit\"\n            style={{ fontWeight: \"bold\" }}\n          >\n            {props.payload[0].unit}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { LatLngTuple } from \"leaflet\";\nimport critCityMap from \"./maps/crit-city.png\";\nimport franceMap from \"./maps/france.png\";\nimport innsbruckMap from \"./maps/innsbruck.png\";\nimport londonMap from \"./maps/london.png\";\nimport newYorkMap from \"./maps/new-york.png\";\nimport parisMap from \"./maps/paris.png\";\nimport richmondMap from \"./maps/richmond.png\";\nimport watopiaMap from \"./maps/watopia.png\";\nimport yorkshireMap from \"./maps/yorkshire.png\";\nimport { World } from \"./types\";\n\nexport type WorldConfig = {\n  bounds: [LatLngTuple, LatLngTuple];\n  image: string;\n  backgroundColor: string;\n};\n\nexport const worldConfigs: Record<World, WorldConfig> = {\n  \"crit-city\": {\n    bounds: [\n      [-10.3657, 165.7824],\n      [-10.4038, 165.8207],\n    ],\n    image: critCityMap,\n    backgroundColor: '#7c9938'\n  },\n\n  france: {\n    bounds: [\n      [-21.64155, 166.1384],\n      [-21.7564, 166.26125],\n    ],\n    image: franceMap,\n    backgroundColor: '#6f992d'\n  },\n\n  innsbruck: {\n    bounds: [\n      [47.2947, 11.3501],\n      [47.2055, 11.4822],\n    ],\n    image: innsbruckMap,\n    backgroundColor: '#7c9938'\n  },\n\n  london: {\n    bounds: [\n      [51.5362, -0.1776],\n      [51.4601, -0.0555],\n    ],\n    image: londonMap,\n    backgroundColor: '#6f992d'\n  },\n\n  \"new-york\": {\n    bounds: [\n      [40.81725, -74.0227],\n      [40.74085, -73.9222],\n    ],\n    image: newYorkMap,\n    backgroundColor: '#bbbbb7'\n  },\n\n  paris: {\n    bounds: [\n      [48.9058, 2.2561],\n      [48.82945, 2.3722],\n    ],\n    image: parisMap,\n    backgroundColor: '#b9b9b9'\n  },\n\n  richmond: {\n    bounds: [\n      [37.5774, -77.48954],\n      [37.5014, -77.394],\n    ],\n    image: richmondMap,\n    backgroundColor: '#7c9938'\n  },\n\n  watopia: {\n    bounds: [\n      [-11.62597, 166.87747],\n      [-11.70255, 167.03255],\n    ],\n    image: watopiaMap,\n    backgroundColor: '#0884e2'\n  },\n  yorkshire: {\n    bounds: [\n      [54.0254, -1.632],\n      [53.9491, -1.5022],\n    ],\n    image: yorkshireMap,\n    backgroundColor: '#7c9938'\n  },\n};\n","export default __webpack_public_path__ + \"static/media/crit-city.3bab2d0f.png\";","export default __webpack_public_path__ + \"static/media/france.5e310dc4.png\";","export default __webpack_public_path__ + \"static/media/innsbruck.9821ed90.png\";","export default __webpack_public_path__ + \"static/media/london.54ae112e.png\";","export default __webpack_public_path__ + \"static/media/new-york.5bf9b5e8.png\";","export default __webpack_public_path__ + \"static/media/paris.63398748.png\";","export default __webpack_public_path__ + \"static/media/richmond.72df812b.png\";","export default __webpack_public_path__ + \"static/media/watopia.0901a23e.png\";","export default __webpack_public_path__ + \"static/media/yorkshire.b83235cf.png\";","export function flipLatLng(p: [number, number]): [number, number] {\n  return [p[1], p[0]];\n}\n","import along from \"@turf/along\";\nimport { lineString } from \"@turf/helpers\";\nimport \"leaflet/dist/leaflet.css\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport { Circle, ImageOverlay, MapContainer, Polyline } from \"react-leaflet\";\nimport { RouteSelection } from \"./RouteSelector\";\nimport { getSegment } from \"./SegmentRepository\";\nimport { Route } from \"./types\";\nimport { worldConfigs } from \"./worldConfig\";\nimport { LatLngBounds, LatLngExpression, Map } from \"leaflet\";\nimport { flipLatLng } from \"./util\";\n\ninterface Props {\n  routeSelection: RouteSelection;\n  mouseHoverDistance: number | undefined;\n}\n\nexport default function RouteMap({\n  routeSelection,\n  mouseHoverDistance,\n}: Props) {\n  const world = routeSelection.world;\n  const worldConfig = worldConfigs[world];\n  const bounds = useMemo(() => new LatLngBounds(worldConfig.bounds), [\n    worldConfig,\n  ]);\n\n  const [map, setMap] = useState<Map | undefined>();\n  useEffect(() => {\n    map?.zoomControl.setPosition(\"topright\");\n  }, [map]);\n\n  const { result: segment } = useAsync(\n    async (r?: Route) => {\n      if (r === undefined) {\n        return;\n      }\n\n      return await getSegment(r.slug);\n    },\n    [routeSelection.route]\n  );\n\n  useEffect(() => {\n    if (!map || !segment) {\n      return;\n    }\n\n    const bounds = segment.latlng.reduce(\n      (bounds, coord) => bounds.extend(coord),\n      new LatLngBounds(segment.latlng[0], segment.latlng[0])\n    );\n\n    map.invalidateSize();\n    map.fitBounds(bounds);\n  }, [map, segment]);\n\n  useEffect(() => {\n    if (!map || !routeSelection) {\n      return;\n    }\n\n    const world = routeSelection.world;\n    const worldConfig = worldConfigs[world];\n    const bounds = new LatLngBounds(worldConfig.bounds);\n\n    map.invalidateSize();\n    map.setMaxBounds(bounds);\n\n    const minZoom = map.getBoundsZoom(bounds, false);\n    map.setMinZoom(minZoom);\n\n    if (!routeSelection.route) {\n      map.setZoom(minZoom, { animate: false });\n    }\n  }, [map, routeSelection]);\n\n  const pointCoordinates = useMemo<LatLngExpression | undefined>(() => {\n    if (!segment || !mouseHoverDistance) {\n      return;\n    }\n\n    const line = lineString(segment.latlng.map(flipLatLng));\n    const point = along(line, mouseHoverDistance, { units: \"kilometers\" });\n    return [point.geometry.coordinates[1], point.geometry.coordinates[0]];\n  }, [segment, mouseHoverDistance]);\n\n  return (\n    <MapContainer\n      key={routeSelection.world}\n      whenCreated={(map) => setMap(map)}\n      bounds={bounds}\n      style={{ backgroundColor: worldConfig.backgroundColor }}\n    >\n      <ImageOverlay\n        url={worldConfig.image}\n        bounds={bounds}\n        attribution='&amp;copy <a href=\"https://zwift.com\" rel=\"noreferrer noopener\">Zwift</a>'\n      />\n      {segment && (\n        <Polyline\n          positions={segment.latlng}\n          pathOptions={{ color: \"#fc6719\", weight: 4 }}\n        />\n      )}\n      {pointCoordinates && (\n        <Circle\n          center={pointCoordinates}\n          radius={5}\n          pathOptions={{\n            color: \"white\",\n            fillColor: \"white\",\n            fillOpacity: 1,\n          }}\n        />\n      )}\n    </MapContainer>\n  );\n}\n","import c from \"classnames\";\nimport { ChangeEvent } from \"react\";\nimport { routes } from \"./data/routes\";\nimport styles from \"./RouteSelector.module.css\";\nimport { Route, World } from \"./types\";\n\nexport interface RouteSelection {\n  world: World;\n  route?: Route;\n}\n\ninterface Props {\n  selection: RouteSelection;\n  onChange: (route: RouteSelection) => void;\n}\nexport default function RouteSelector({ selection, onChange }: Props) {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      const route = routes.find((r) => r.slug === e.target.value)!;\n      onChange({ world: route.world, route });\n    }\n  };\n\n  const filteredRoutes = routes\n    .filter((route) => route.world === selection.world)\n    .filter((route) => route.sport === \"cycling\")\n    .filter((route) => route.stravaSegmentId !== undefined)\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.Sidebar}>\n        <select\n          value={selection.world}\n          onChange={(e) => onChange({ world: e.target.value as World })}\n        >\n          <option value=\"crit-city\">Crit City</option>\n          <option value=\"france\">France</option>\n          <option value=\"innsbruck\">Innsbruck</option>\n          <option value=\"london\">London</option>\n          <option value=\"new-york\">New York</option>\n          <option value=\"paris\">Paris</option>\n          <option value=\"richmond\">Richmond</option>\n          <option value=\"watopia\">Watopia</option>\n          <option value=\"yorkshire\">Yorkshire</option>\n        </select>\n\n        {filteredRoutes.map((route) => (\n          <label\n            key={route.slug}\n            className={c(styles.Item, {\n              [styles.selected]: selection.route?.slug === route.slug,\n            })}\n          >\n            <input\n              type=\"radio\"\n              name=\"routes\"\n              value={route.slug}\n              checked={selection.route?.slug === route.slug}\n              onChange={handleChange}\n            />\n            {route.name}\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import c from \"classnames\";\nimport React, { useMemo, useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport { WORLDS } from \"./constants\";\nimport { routes } from \"./data/routes\";\nimport { ElevationChart } from \"./ElevationChart\";\nimport { useHash } from \"./hooks/useHash\";\nimport RouteMap from \"./RouteMap\";\nimport RouteSelector, { RouteSelection } from \"./RouteSelector\";\nimport { World } from \"./types\";\n\nexport default function App() {\n  const [hash, setHash] = useHash();\n  const routeSelection = useMemo<RouteSelection>(() => {\n    if (WORLDS.includes(hash as any)) {\n      return { world: hash as World };\n    } else if (routes.find((r) => r.slug === hash)) {\n      const route = routes.find((r) => r.slug === hash)!;\n      return {\n        world: route.world,\n        route,\n      };\n    }\n\n    return { world: \"watopia\" as World };\n  }, [hash]);\n\n  const handleRouteSelectionChange = (rs: RouteSelection) => {\n    if (rs.route) {\n      setHash(rs.route.slug);\n    } else {\n      setHash(rs.world);\n    }\n  };\n\n  const [mouseHoverDistance, setMouseHoverDistance] = useState<\n    number | undefined\n  >(undefined);\n\n  return (\n    <div\n      className={c(styles.Wrapper, {\n        [styles.routeSelected]: routeSelection.route !== undefined,\n      })}\n    >\n      <RouteSelector\n        selection={routeSelection}\n        onChange={handleRouteSelectionChange}\n      />\n      <RouteMap\n        routeSelection={routeSelection}\n        mouseHoverDistance={mouseHoverDistance}\n      />\n      {routeSelection.route && (\n        <ElevationChart\n          route={routeSelection.route}\n          onMouseHoverDistanceChange={setMouseHoverDistance}\n        />\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useHash(): [string, (hash: string) => void] {\n  const [hash, setHash] = useState(window.location.hash);\n\n  useEffect(() => {\n    const listener = () => {\n      setHash(window.location.hash);\n    };\n\n    window.addEventListener(\"popstate\", listener);\n    return () => window.removeEventListener(\"popstate\", listener);\n  }, []);\n\n  const updateHash = (hash: string) => {\n    window.location.hash = `#${hash}`;\n  };\n\n  return [hash.slice(1), updateHash];\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"RouteSelector_Container__2aeQm\",\"Sidebar\":\"RouteSelector_Sidebar__25tGa\",\"Item\":\"RouteSelector_Item__402nz\",\"selected\":\"RouteSelector_selected__2JMs6\"};"],"sourceRoot":""}